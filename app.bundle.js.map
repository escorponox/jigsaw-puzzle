{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap 4fe00437e7999a56e1fa","webpack:///../~/ramda/index.js","webpack:///../~/ramda/src/F.js","webpack:///../~/ramda/src/T.js","webpack:///../~/ramda/src/__.js","webpack:///../~/ramda/src/add.js","webpack:///../~/ramda/src/addIndex.js","webpack:///../~/ramda/src/adjust.js","webpack:///../~/ramda/src/all.js","webpack:///../~/ramda/src/allPass.js","webpack:///../~/ramda/src/always.js","webpack:///../~/ramda/src/and.js","webpack:///../~/ramda/src/any.js","webpack:///../~/ramda/src/anyPass.js","webpack:///../~/ramda/src/ap.js","webpack:///../~/ramda/src/aperture.js","webpack:///../~/ramda/src/append.js","webpack:///../~/ramda/src/apply.js","webpack:///../~/ramda/src/applySpec.js","webpack:///../~/ramda/src/ascend.js","webpack:///../~/ramda/src/assoc.js","webpack:///../~/ramda/src/assocPath.js","webpack:///../~/ramda/src/binary.js","webpack:///../~/ramda/src/bind.js","webpack:///../~/ramda/src/both.js","webpack:///../~/ramda/src/call.js","webpack:///../~/ramda/src/chain.js","webpack:///../~/ramda/src/clamp.js","webpack:///../~/ramda/src/clone.js","webpack:///../~/ramda/src/comparator.js","webpack:///../~/ramda/src/complement.js","webpack:///../~/ramda/src/compose.js","webpack:///../~/ramda/src/composeK.js","webpack:///../~/ramda/src/composeP.js","webpack:///../~/ramda/src/concat.js","webpack:///../~/ramda/src/cond.js","webpack:///../~/ramda/src/construct.js","webpack:///../~/ramda/src/constructN.js","webpack:///../~/ramda/src/contains.js","webpack:///../~/ramda/src/converge.js","webpack:///../~/ramda/src/countBy.js","webpack:///../~/ramda/src/curry.js","webpack:///../~/ramda/src/curryN.js","webpack:///../~/ramda/src/dec.js","webpack:///../~/ramda/src/defaultTo.js","webpack:///../~/ramda/src/descend.js","webpack:///../~/ramda/src/difference.js","webpack:///../~/ramda/src/differenceWith.js","webpack:///../~/ramda/src/dissoc.js","webpack:///../~/ramda/src/dissocPath.js","webpack:///../~/ramda/src/divide.js","webpack:///../~/ramda/src/drop.js","webpack:///../~/ramda/src/dropLast.js","webpack:///../~/ramda/src/dropLastWhile.js","webpack:///../~/ramda/src/dropRepeats.js","webpack:///../~/ramda/src/dropRepeatsWith.js","webpack:///../~/ramda/src/dropWhile.js","webpack:///../~/ramda/src/either.js","webpack:///../~/ramda/src/empty.js","webpack:///../~/ramda/src/eqBy.js","webpack:///../~/ramda/src/eqProps.js","webpack:///../~/ramda/src/equals.js","webpack:///../~/ramda/src/evolve.js","webpack:///../~/ramda/src/filter.js","webpack:///../~/ramda/src/find.js","webpack:///../~/ramda/src/findIndex.js","webpack:///../~/ramda/src/findLast.js","webpack:///../~/ramda/src/findLastIndex.js","webpack:///../~/ramda/src/flatten.js","webpack:///../~/ramda/src/flip.js","webpack:///../~/ramda/src/forEach.js","webpack:///../~/ramda/src/forEachObjIndexed.js","webpack:///../~/ramda/src/fromPairs.js","webpack:///../~/ramda/src/groupBy.js","webpack:///../~/ramda/src/groupWith.js","webpack:///../~/ramda/src/gt.js","webpack:///../~/ramda/src/gte.js","webpack:///../~/ramda/src/has.js","webpack:///../~/ramda/src/hasIn.js","webpack:///../~/ramda/src/head.js","webpack:///../~/ramda/src/identical.js","webpack:///../~/ramda/src/identity.js","webpack:///../~/ramda/src/ifElse.js","webpack:///../~/ramda/src/inc.js","webpack:///../~/ramda/src/indexBy.js","webpack:///../~/ramda/src/indexOf.js","webpack:///../~/ramda/src/init.js","webpack:///../~/ramda/src/insert.js","webpack:///../~/ramda/src/insertAll.js","webpack:///../~/ramda/src/internal/_Set.js","webpack:///../~/ramda/src/internal/_aperture.js","webpack:///../~/ramda/src/internal/_arity.js","webpack:///../~/ramda/src/internal/_arrayFromIterator.js","webpack:///../~/ramda/src/internal/_assign.js","webpack:///../~/ramda/src/internal/_checkForMethod.js","webpack:///../~/ramda/src/internal/_clone.js","webpack:///../~/ramda/src/internal/_cloneRegExp.js","webpack:///../~/ramda/src/internal/_complement.js","webpack:///../~/ramda/src/internal/_concat.js","webpack:///../~/ramda/src/internal/_contains.js","webpack:///../~/ramda/src/internal/_containsWith.js","webpack:///../~/ramda/src/internal/_createPartialApplicator.js","webpack:///../~/ramda/src/internal/_curry1.js","webpack:///../~/ramda/src/internal/_curry2.js","webpack:///../~/ramda/src/internal/_curry3.js","webpack:///../~/ramda/src/internal/_curryN.js","webpack:///../~/ramda/src/internal/_dispatchable.js","webpack:///../~/ramda/src/internal/_dropLast.js","webpack:///../~/ramda/src/internal/_dropLastWhile.js","webpack:///../~/ramda/src/internal/_equals.js","webpack:///../~/ramda/src/internal/_filter.js","webpack:///../~/ramda/src/internal/_flatCat.js","webpack:///../~/ramda/src/internal/_forceReduced.js","webpack:///../~/ramda/src/internal/_functionName.js","webpack:///../~/ramda/src/internal/_has.js","webpack:///../~/ramda/src/internal/_identity.js","webpack:///../~/ramda/src/internal/_indexOf.js","webpack:///../~/ramda/src/internal/_isArguments.js","webpack:///../~/ramda/src/internal/_isArray.js","webpack:///../~/ramda/src/internal/_isFunction.js","webpack:///../~/ramda/src/internal/_isInteger.js","webpack:///../~/ramda/src/internal/_isNumber.js","webpack:///../~/ramda/src/internal/_isObject.js","webpack:///../~/ramda/src/internal/_isPlaceholder.js","webpack:///../~/ramda/src/internal/_isRegExp.js","webpack:///../~/ramda/src/internal/_isString.js","webpack:///../~/ramda/src/internal/_isTransformer.js","webpack:///../~/ramda/src/internal/_makeFlat.js","webpack:///../~/ramda/src/internal/_map.js","webpack:///../~/ramda/src/internal/_objectAssign.js","webpack:///../~/ramda/src/internal/_of.js","webpack:///../~/ramda/src/internal/_pipe.js","webpack:///../~/ramda/src/internal/_pipeP.js","webpack:///../~/ramda/src/internal/_quote.js","webpack:///../~/ramda/src/internal/_reduce.js","webpack:///../~/ramda/src/internal/_reduced.js","webpack:///../~/ramda/src/internal/_stepCat.js","webpack:///../~/ramda/src/internal/_toISOString.js","webpack:///../~/ramda/src/internal/_toString.js","webpack:///../~/ramda/src/internal/_xall.js","webpack:///../~/ramda/src/internal/_xany.js","webpack:///../~/ramda/src/internal/_xaperture.js","webpack:///../~/ramda/src/internal/_xchain.js","webpack:///../~/ramda/src/internal/_xdrop.js","webpack:///../~/ramda/src/internal/_xdropLast.js","webpack:///../~/ramda/src/internal/_xdropLastWhile.js","webpack:///../~/ramda/src/internal/_xdropRepeatsWith.js","webpack:///../~/ramda/src/internal/_xdropWhile.js","webpack:///../~/ramda/src/internal/_xfBase.js","webpack:///../~/ramda/src/internal/_xfilter.js","webpack:///../~/ramda/src/internal/_xfind.js","webpack:///../~/ramda/src/internal/_xfindIndex.js","webpack:///../~/ramda/src/internal/_xfindLast.js","webpack:///../~/ramda/src/internal/_xfindLastIndex.js","webpack:///../~/ramda/src/internal/_xmap.js","webpack:///../~/ramda/src/internal/_xreduceBy.js","webpack:///../~/ramda/src/internal/_xtake.js","webpack:///../~/ramda/src/internal/_xtakeWhile.js","webpack:///../~/ramda/src/internal/_xwrap.js","webpack:///../~/ramda/src/intersection.js","webpack:///../~/ramda/src/intersectionWith.js","webpack:///../~/ramda/src/intersperse.js","webpack:///../~/ramda/src/into.js","webpack:///../~/ramda/src/invert.js","webpack:///../~/ramda/src/invertObj.js","webpack:///../~/ramda/src/invoker.js","webpack:///../~/ramda/src/is.js","webpack:///../~/ramda/src/isArrayLike.js","webpack:///../~/ramda/src/isEmpty.js","webpack:///../~/ramda/src/isNil.js","webpack:///../~/ramda/src/join.js","webpack:///../~/ramda/src/juxt.js","webpack:///../~/ramda/src/keys.js","webpack:///../~/ramda/src/keysIn.js","webpack:///../~/ramda/src/last.js","webpack:///../~/ramda/src/lastIndexOf.js","webpack:///../~/ramda/src/length.js","webpack:///../~/ramda/src/lens.js","webpack:///../~/ramda/src/lensIndex.js","webpack:///../~/ramda/src/lensPath.js","webpack:///../~/ramda/src/lensProp.js","webpack:///../~/ramda/src/lift.js","webpack:///../~/ramda/src/liftN.js","webpack:///../~/ramda/src/lt.js","webpack:///../~/ramda/src/lte.js","webpack:///../~/ramda/src/map.js","webpack:///../~/ramda/src/mapAccum.js","webpack:///../~/ramda/src/mapAccumRight.js","webpack:///../~/ramda/src/mapObjIndexed.js","webpack:///../~/ramda/src/match.js","webpack:///../~/ramda/src/mathMod.js","webpack:///../~/ramda/src/max.js","webpack:///../~/ramda/src/maxBy.js","webpack:///../~/ramda/src/mean.js","webpack:///../~/ramda/src/median.js","webpack:///../~/ramda/src/memoize.js","webpack:///../~/ramda/src/merge.js","webpack:///../~/ramda/src/mergeAll.js","webpack:///../~/ramda/src/mergeWith.js","webpack:///../~/ramda/src/mergeWithKey.js","webpack:///../~/ramda/src/min.js","webpack:///../~/ramda/src/minBy.js","webpack:///../~/ramda/src/modulo.js","webpack:///../~/ramda/src/multiply.js","webpack:///../~/ramda/src/nAry.js","webpack:///../~/ramda/src/negate.js","webpack:///../~/ramda/src/none.js","webpack:///../~/ramda/src/not.js","webpack:///../~/ramda/src/nth.js","webpack:///../~/ramda/src/nthArg.js","webpack:///../~/ramda/src/objOf.js","webpack:///../~/ramda/src/of.js","webpack:///../~/ramda/src/omit.js","webpack:///../~/ramda/src/once.js","webpack:///../~/ramda/src/or.js","webpack:///../~/ramda/src/over.js","webpack:///../~/ramda/src/pair.js","webpack:///../~/ramda/src/partial.js","webpack:///../~/ramda/src/partialRight.js","webpack:///../~/ramda/src/partition.js","webpack:///../~/ramda/src/path.js","webpack:///../~/ramda/src/pathEq.js","webpack:///../~/ramda/src/pathOr.js","webpack:///../~/ramda/src/pathSatisfies.js","webpack:///../~/ramda/src/pick.js","webpack:///../~/ramda/src/pickAll.js","webpack:///../~/ramda/src/pickBy.js","webpack:///../~/ramda/src/pipe.js","webpack:///../~/ramda/src/pipeK.js","webpack:///../~/ramda/src/pipeP.js","webpack:///../~/ramda/src/pluck.js","webpack:///../~/ramda/src/prepend.js","webpack:///../~/ramda/src/product.js","webpack:///../~/ramda/src/project.js","webpack:///../~/ramda/src/prop.js","webpack:///../~/ramda/src/propEq.js","webpack:///../~/ramda/src/propIs.js","webpack:///../~/ramda/src/propOr.js","webpack:///../~/ramda/src/propSatisfies.js","webpack:///../~/ramda/src/props.js","webpack:///../~/ramda/src/range.js","webpack:///../~/ramda/src/reduce.js","webpack:///../~/ramda/src/reduceBy.js","webpack:///../~/ramda/src/reduceRight.js","webpack:///../~/ramda/src/reduceWhile.js","webpack:///../~/ramda/src/reduced.js","webpack:///../~/ramda/src/reject.js","webpack:///../~/ramda/src/remove.js","webpack:///../~/ramda/src/repeat.js","webpack:///../~/ramda/src/replace.js","webpack:///../~/ramda/src/reverse.js","webpack:///../~/ramda/src/scan.js","webpack:///../~/ramda/src/sequence.js","webpack:///../~/ramda/src/set.js","webpack:///../~/ramda/src/slice.js","webpack:///../~/ramda/src/sort.js","webpack:///../~/ramda/src/sortBy.js","webpack:///../~/ramda/src/sortWith.js","webpack:///../~/ramda/src/split.js","webpack:///../~/ramda/src/splitAt.js","webpack:///../~/ramda/src/splitEvery.js","webpack:///../~/ramda/src/splitWhen.js","webpack:///../~/ramda/src/subtract.js","webpack:///../~/ramda/src/sum.js","webpack:///../~/ramda/src/symmetricDifference.js","webpack:///../~/ramda/src/symmetricDifferenceWith.js","webpack:///../~/ramda/src/tail.js","webpack:///../~/ramda/src/take.js","webpack:///../~/ramda/src/takeLast.js","webpack:///../~/ramda/src/takeLastWhile.js","webpack:///../~/ramda/src/takeWhile.js","webpack:///../~/ramda/src/tap.js","webpack:///../~/ramda/src/test.js","webpack:///../~/ramda/src/times.js","webpack:///../~/ramda/src/toLower.js","webpack:///../~/ramda/src/toPairs.js","webpack:///../~/ramda/src/toPairsIn.js","webpack:///../~/ramda/src/toString.js","webpack:///../~/ramda/src/toUpper.js","webpack:///../~/ramda/src/transduce.js","webpack:///../~/ramda/src/transpose.js","webpack:///../~/ramda/src/traverse.js","webpack:///../~/ramda/src/trim.js","webpack:///../~/ramda/src/tryCatch.js","webpack:///../~/ramda/src/type.js","webpack:///../~/ramda/src/unapply.js","webpack:///../~/ramda/src/unary.js","webpack:///../~/ramda/src/uncurryN.js","webpack:///../~/ramda/src/unfold.js","webpack:///../~/ramda/src/union.js","webpack:///../~/ramda/src/unionWith.js","webpack:///../~/ramda/src/uniq.js","webpack:///../~/ramda/src/uniqBy.js","webpack:///../~/ramda/src/uniqWith.js","webpack:///../~/ramda/src/unless.js","webpack:///../~/ramda/src/unnest.js","webpack:///../~/ramda/src/until.js","webpack:///../~/ramda/src/update.js","webpack:///../~/ramda/src/useWith.js","webpack:///../~/ramda/src/values.js","webpack:///../~/ramda/src/valuesIn.js","webpack:///../~/ramda/src/view.js","webpack:///../~/ramda/src/when.js","webpack:///../~/ramda/src/where.js","webpack:///../~/ramda/src/whereEq.js","webpack:///../~/ramda/src/without.js","webpack:///../~/ramda/src/xprod.js","webpack:///../~/ramda/src/zip.js","webpack:///../~/ramda/src/zipObj.js","webpack:///../~/ramda/src/zipWith.js","webpack:///./scripts/app.js","webpack:///./scripts/drag-and-drop.js","webpack:///./scripts/shuffle.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","../node_modules/ramda/index.js","F","T","__","add","addIndex","adjust","all","allPass","always","and","any","anyPass","ap","aperture","append","apply","applySpec","ascend","assoc","assocPath","binary","bind","both","chain","clamp","clone","comparator","complement","compose","composeK","composeP","concat","cond","construct","constructN","contains","converge","countBy","curry","curryN","dec","descend","defaultTo","difference","differenceWith","dissoc","dissocPath","divide","drop","dropLast","dropLastWhile","dropRepeats","dropRepeatsWith","dropWhile","either","empty","eqBy","eqProps","equals","evolve","filter","find","findIndex","findLast","findLastIndex","flatten","flip","forEach","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","has","hasIn","head","identical","identity","ifElse","inc","indexBy","indexOf","init","insert","insertAll","intersection","intersectionWith","intersperse","into","invert","invertObj","invoker","is","isArrayLike","isEmpty","isNil","join","juxt","keys","keysIn","last","lastIndexOf","length","lens","lensIndex","lensPath","lensProp","lift","liftN","lt","lte","map","mapAccum","mapAccumRight","mapObjIndexed","match","mathMod","max","maxBy","mean","median","memoize","merge","mergeAll","mergeWith","mergeWithKey","min","minBy","modulo","multiply","nAry","negate","none","not","nth","nthArg","objOf","of","omit","once","or","over","pair","partial","partialRight","partition","path","pathEq","pathOr","pathSatisfies","pick","pickAll","pickBy","pipe","pipeK","pipeP","pluck","prepend","product","project","prop","propEq","propIs","propOr","propSatisfies","props","range","reduce","reduceBy","reduceRight","reduceWhile","reduced","reject","remove","repeat","replace","reverse","scan","sequence","set","slice","sort","sortBy","sortWith","split","splitAt","splitEvery","splitWhen","subtract","sum","symmetricDifference","symmetricDifferenceWith","tail","take","takeLast","takeLastWhile","takeWhile","tap","test","times","toLower","toPairs","toPairsIn","toString","toUpper","transduce","transpose","traverse","trim","tryCatch","type","unapply","unary","uncurryN","unfold","union","unionWith","uniq","uniqBy","uniqWith","unless","unnest","until","update","useWith","values","valuesIn","view","when","where","whereEq","without","xprod","zip","zipObj","zipWith","../node_modules/ramda/src/F.js","../node_modules/ramda/src/T.js","../node_modules/ramda/src/__.js","@@functional/placeholder","../node_modules/ramda/src/add.js","_curry2","a","b","Number","../node_modules/ramda/src/addIndex.js","_concat","_curry1","fn","idx","origFn","arguments","list","args","Array","result","this","../node_modules/ramda/src/adjust.js","_curry3","start","_idx","_list","../node_modules/ramda/src/all.js","_dispatchable","_xall","../node_modules/ramda/src/allPass.js","preds","len","../node_modules/ramda/src/always.js","val","../node_modules/ramda/src/and.js","../node_modules/ramda/src/any.js","_xany","../node_modules/ramda/src/anyPass.js","../node_modules/ramda/src/ap.js","_reduce","applicative","x","acc","f","../node_modules/ramda/src/aperture.js","_aperture","_xaperture","../node_modules/ramda/src/append.js","el","../node_modules/ramda/src/apply.js","../node_modules/ramda/src/applySpec.js","spec","v","../node_modules/ramda/src/ascend.js","aa","bb","../node_modules/ramda/src/assoc.js","obj","../node_modules/ramda/src/assocPath.js","_has","_isArray","_isInteger","nextObj","arr","../node_modules/ramda/src/binary.js","../node_modules/ramda/src/bind.js","_arity","thisObj","../node_modules/ramda/src/both.js","_isFunction","g","../node_modules/ramda/src/call.js","../node_modules/ramda/src/chain.js","_makeFlat","_xchain","monad","../node_modules/ramda/src/clamp.js","Error","../node_modules/ramda/src/clone.js","_clone","../node_modules/ramda/src/comparator.js","pred","../node_modules/ramda/src/complement.js","../node_modules/ramda/src/compose.js","../node_modules/ramda/src/composeK.js","pop","../node_modules/ramda/src/composeP.js","../node_modules/ramda/src/concat.js","TypeError","../node_modules/ramda/src/cond.js","pairs","arity","../node_modules/ramda/src/construct.js","Fn","../node_modules/ramda/src/constructN.js","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","../node_modules/ramda/src/contains.js","_contains","../node_modules/ramda/src/converge.js","_map","after","fns","context","../node_modules/ramda/src/countBy.js","elem","../node_modules/ramda/src/curry.js","../node_modules/ramda/src/curryN.js","_curryN","../node_modules/ramda/src/dec.js","../node_modules/ramda/src/defaultTo.js","../node_modules/ramda/src/descend.js","../node_modules/ramda/src/difference.js","first","second","out","firstLen","../node_modules/ramda/src/differenceWith.js","_containsWith","push","../node_modules/ramda/src/dissoc.js","../node_modules/ramda/src/dissocPath.js","../node_modules/ramda/src/divide.js","../node_modules/ramda/src/drop.js","_xdrop","xs","Math","Infinity","../node_modules/ramda/src/dropLast.js","_dropLast","_xdropLast","../node_modules/ramda/src/dropLastWhile.js","_dropLastWhile","_xdropLastWhile","../node_modules/ramda/src/dropRepeats.js","_xdropRepeatsWith","../node_modules/ramda/src/dropRepeatsWith.js","../node_modules/ramda/src/dropWhile.js","_xdropWhile","../node_modules/ramda/src/either.js","../node_modules/ramda/src/empty.js","_isArguments","_isObject","_isString","constructor","../node_modules/ramda/src/eqBy.js","y","../node_modules/ramda/src/eqProps.js","obj1","obj2","../node_modules/ramda/src/equals.js","_equals","../node_modules/ramda/src/evolve.js","transformations","transformation","key","../node_modules/ramda/src/filter.js","_filter","_xfilter","filterable","../node_modules/ramda/src/find.js","_xfind","../node_modules/ramda/src/findIndex.js","_xfindIndex","../node_modules/ramda/src/findLast.js","_xfindLast","../node_modules/ramda/src/findLastIndex.js","_xfindLastIndex","../node_modules/ramda/src/flatten.js","../node_modules/ramda/src/flip.js","../node_modules/ramda/src/forEach.js","_checkForMethod","../node_modules/ramda/src/forEachObjIndexed.js","keyList","../node_modules/ramda/src/fromPairs.js","../node_modules/ramda/src/groupBy.js","item","../node_modules/ramda/src/groupWith.js","res","nextidx","../node_modules/ramda/src/gt.js","../node_modules/ramda/src/gte.js","../node_modules/ramda/src/has.js","../node_modules/ramda/src/hasIn.js","../node_modules/ramda/src/head.js","../node_modules/ramda/src/identical.js","../node_modules/ramda/src/identity.js","_identity","../node_modules/ramda/src/ifElse.js","condition","onTrue","onFalse","../node_modules/ramda/src/inc.js","../node_modules/ramda/src/indexBy.js","../node_modules/ramda/src/indexOf.js","_indexOf","target","../node_modules/ramda/src/init.js","../node_modules/ramda/src/insert.js","elt","splice","../node_modules/ramda/src/insertAll.js","elts","../node_modules/ramda/src/internal/_Set.js","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","newSize","size","bIdx","../node_modules/ramda/src/internal/_aperture.js","limit","../node_modules/ramda/src/internal/_arity.js","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","../node_modules/ramda/src/internal/_arrayFromIterator.js","iter","next","done","../node_modules/ramda/src/internal/_assign.js","_objectAssign","assign","../node_modules/ramda/src/internal/_checkForMethod.js","methodname","../node_modules/ramda/src/internal/_clone.js","_cloneRegExp","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","../node_modules/ramda/src/internal/_cloneRegExp.js","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","../node_modules/ramda/src/internal/_complement.js","../node_modules/ramda/src/internal/_concat.js","set1","set2","len1","len2","../node_modules/ramda/src/internal/_contains.js","../node_modules/ramda/src/internal/_containsWith.js","../node_modules/ramda/src/internal/_createPartialApplicator.js","../node_modules/ramda/src/internal/_curry1.js","_isPlaceholder","f1","../node_modules/ramda/src/internal/_curry2.js","f2","_b","_a","../node_modules/ramda/src/internal/_curry3.js","f3","_c","../node_modules/ramda/src/internal/_curryN.js","received","combined","argsIdx","left","combinedIdx","../node_modules/ramda/src/internal/_dispatchable.js","_isTransformer","methodNames","xf","transducer","../node_modules/ramda/src/internal/_dropLast.js","../node_modules/ramda/src/internal/_dropLastWhile.js","../node_modules/ramda/src/internal/_equals.js","_arrayFromIterator","_functionName","stackA","stackB","message","entries","keysA","../node_modules/ramda/src/internal/_filter.js","../node_modules/ramda/src/internal/_flatCat.js","_forceReduced","_xfBase","preservingReduced","@@transducer/init","@@transducer/result","@@transducer/step","input","ret","rxf","../node_modules/ramda/src/internal/_forceReduced.js","@@transducer/value","@@transducer/reduced","../node_modules/ramda/src/internal/_functionName.js","String","../node_modules/ramda/src/internal/_has.js","../node_modules/ramda/src/internal/_identity.js","../node_modules/ramda/src/internal/_indexOf.js","inf","../node_modules/ramda/src/internal/_isArguments.js","../node_modules/ramda/src/internal/_isArray.js","isArray","../node_modules/ramda/src/internal/_isFunction.js","../node_modules/ramda/src/internal/_isInteger.js","isInteger","../node_modules/ramda/src/internal/_isNumber.js","../node_modules/ramda/src/internal/_isObject.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_isRegExp.js","../node_modules/ramda/src/internal/_isString.js","../node_modules/ramda/src/internal/_isTransformer.js","../node_modules/ramda/src/internal/_makeFlat.js","recursive","flatt","jlen","j","ilen","../node_modules/ramda/src/internal/_map.js","functor","../node_modules/ramda/src/internal/_objectAssign.js","output","nextKey","../node_modules/ramda/src/internal/_of.js","../node_modules/ramda/src/internal/_pipe.js","../node_modules/ramda/src/internal/_pipeP.js","ctx","then","../node_modules/ramda/src/internal/_quote.js","escaped","../node_modules/ramda/src/internal/_reduce.js","_xwrap","_arrayReduce","_iterableReduce","step","_methodReduce","symIterator","Symbol","iterator","../node_modules/ramda/src/internal/_reduced.js","../node_modules/ramda/src/internal/_stepCat.js","_assign","_stepCatArray","_stepCatString","_stepCatObject","../node_modules/ramda/src/internal/_toISOString.js","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","../node_modules/ramda/src/internal/_toString.js","_quote","_toISOString","_toString","seen","recur","mapPairs","k","isNaN","NaN","repr","../node_modules/ramda/src/internal/_xall.js","_reduced","XAll","../node_modules/ramda/src/internal/_xany.js","XAny","../node_modules/ramda/src/internal/_xaperture.js","XAperture","pos","full","store","getCopy","../node_modules/ramda/src/internal/_xchain.js","_flatCat","../node_modules/ramda/src/internal/_xdrop.js","XDrop","../node_modules/ramda/src/internal/_xdropLast.js","XDropLast","../node_modules/ramda/src/internal/_xdropLastWhile.js","XDropLastWhile","retained","retain","flush","../node_modules/ramda/src/internal/_xdropRepeatsWith.js","XDropRepeatsWith","lastValue","undefined","seenFirstValue","sameAsLast","../node_modules/ramda/src/internal/_xdropWhile.js","XDropWhile","../node_modules/ramda/src/internal/_xfBase.js","../node_modules/ramda/src/internal/_xfilter.js","XFilter","../node_modules/ramda/src/internal/_xfind.js","XFind","found","../node_modules/ramda/src/internal/_xfindIndex.js","XFindIndex","../node_modules/ramda/src/internal/_xfindLast.js","XFindLast","../node_modules/ramda/src/internal/_xfindLastIndex.js","XFindLastIndex","lastIdx","../node_modules/ramda/src/internal/_xmap.js","XMap","../node_modules/ramda/src/internal/_xreduceBy.js","XReduceBy","valueFn","valueAcc","keyFn","inputs","../node_modules/ramda/src/internal/_xtake.js","XTake","../node_modules/ramda/src/internal/_xtakeWhile.js","XTakeWhile","../node_modules/ramda/src/internal/_xwrap.js","XWrap","../node_modules/ramda/src/intersection.js","list1","list2","lookupList","filteredList","../node_modules/ramda/src/intersectionWith.js","results","../node_modules/ramda/src/intersperse.js","separator","../node_modules/ramda/src/into.js","_stepCat","../node_modules/ramda/src/invert.js","../node_modules/ramda/src/invertObj.js","../node_modules/ramda/src/invoker.js","method","../node_modules/ramda/src/is.js","Ctor","../node_modules/ramda/src/isArrayLike.js","nodeType","../node_modules/ramda/src/isEmpty.js","../node_modules/ramda/src/isNil.js","../node_modules/ramda/src/join.js","../node_modules/ramda/src/juxt.js","../node_modules/ramda/src/keys.js","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","nIdx","ks","checkArgsLength","../node_modules/ramda/src/keysIn.js","../node_modules/ramda/src/last.js","../node_modules/ramda/src/lastIndexOf.js","../node_modules/ramda/src/length.js","_isNumber","../node_modules/ramda/src/lens.js","setter","toFunctorFn","focus","../node_modules/ramda/src/lensIndex.js","../node_modules/ramda/src/lensPath.js","../node_modules/ramda/src/lensProp.js","../node_modules/ramda/src/lift.js","../node_modules/ramda/src/liftN.js","lifted","../node_modules/ramda/src/lt.js","../node_modules/ramda/src/lte.js","../node_modules/ramda/src/map.js","_xmap","../node_modules/ramda/src/mapAccum.js","tuple","../node_modules/ramda/src/mapAccumRight.js","../node_modules/ramda/src/mapObjIndexed.js","../node_modules/ramda/src/match.js","rx","str","../node_modules/ramda/src/mathMod.js","../node_modules/ramda/src/max.js","../node_modules/ramda/src/maxBy.js","../node_modules/ramda/src/mean.js","../node_modules/ramda/src/median.js","width","../node_modules/ramda/src/memoize.js","cache","../node_modules/ramda/src/merge.js","r","../node_modules/ramda/src/mergeAll.js","../node_modules/ramda/src/mergeWith.js","_","_l","_r","../node_modules/ramda/src/mergeWithKey.js","../node_modules/ramda/src/min.js","../node_modules/ramda/src/minBy.js","../node_modules/ramda/src/modulo.js","../node_modules/ramda/src/multiply.js","../node_modules/ramda/src/nAry.js","../node_modules/ramda/src/negate.js","../node_modules/ramda/src/none.js","_complement","../node_modules/ramda/src/not.js","../node_modules/ramda/src/nth.js","offset","charAt","../node_modules/ramda/src/nthArg.js","../node_modules/ramda/src/objOf.js","../node_modules/ramda/src/of.js","_of","../node_modules/ramda/src/omit.js","names","../node_modules/ramda/src/once.js","called","../node_modules/ramda/src/or.js","../node_modules/ramda/src/over.js","Identity","../node_modules/ramda/src/pair.js","fst","snd","../node_modules/ramda/src/partial.js","_createPartialApplicator","../node_modules/ramda/src/partialRight.js","../node_modules/ramda/src/partition.js","../node_modules/ramda/src/path.js","paths","../node_modules/ramda/src/pathEq.js","_path","../node_modules/ramda/src/pathOr.js","../node_modules/ramda/src/pathSatisfies.js","propPath","../node_modules/ramda/src/pick.js","../node_modules/ramda/src/pickAll.js","../node_modules/ramda/src/pickBy.js","../node_modules/ramda/src/pipe.js","_pipe","../node_modules/ramda/src/pipeK.js","../node_modules/ramda/src/pipeP.js","_pipeP","../node_modules/ramda/src/pluck.js","../node_modules/ramda/src/prepend.js","../node_modules/ramda/src/product.js","../node_modules/ramda/src/project.js","../node_modules/ramda/src/prop.js","../node_modules/ramda/src/propEq.js","../node_modules/ramda/src/propIs.js","../node_modules/ramda/src/propOr.js","../node_modules/ramda/src/propSatisfies.js","../node_modules/ramda/src/props.js","ps","../node_modules/ramda/src/range.js","from","to","../node_modules/ramda/src/reduce.js","../node_modules/ramda/src/reduceBy.js","_xreduceBy","../node_modules/ramda/src/reduceRight.js","../node_modules/ramda/src/reduceWhile.js","../node_modules/ramda/src/reduced.js","../node_modules/ramda/src/reject.js","../node_modules/ramda/src/remove.js","count","../node_modules/ramda/src/repeat.js","../node_modules/ramda/src/replace.js","regex","replacement","../node_modules/ramda/src/reverse.js","../node_modules/ramda/src/scan.js","../node_modules/ramda/src/sequence.js","traversable","../node_modules/ramda/src/set.js","../node_modules/ramda/src/slice.js","fromIndex","toIndex","../node_modules/ramda/src/sort.js","../node_modules/ramda/src/sortBy.js","../node_modules/ramda/src/sortWith.js","../node_modules/ramda/src/split.js","../node_modules/ramda/src/splitAt.js","index","array","../node_modules/ramda/src/splitEvery.js","../node_modules/ramda/src/splitWhen.js","prefix","../node_modules/ramda/src/subtract.js","../node_modules/ramda/src/sum.js","../node_modules/ramda/src/symmetricDifference.js","../node_modules/ramda/src/symmetricDifferenceWith.js","../node_modules/ramda/src/tail.js","../node_modules/ramda/src/take.js","_xtake","../node_modules/ramda/src/takeLast.js","../node_modules/ramda/src/takeLastWhile.js","../node_modules/ramda/src/takeWhile.js","_xtakeWhile","../node_modules/ramda/src/tap.js","../node_modules/ramda/src/test.js","_isRegExp","../node_modules/ramda/src/times.js","RangeError","../node_modules/ramda/src/toLower.js","../node_modules/ramda/src/toPairs.js","../node_modules/ramda/src/toPairsIn.js","../node_modules/ramda/src/toString.js","../node_modules/ramda/src/toUpper.js","../node_modules/ramda/src/transduce.js","../node_modules/ramda/src/transpose.js","outerlist","innerlist","../node_modules/ramda/src/traverse.js","../node_modules/ramda/src/trim.js","ws","zeroWidth","hasProtoTrim","beginRx","endRx","../node_modules/ramda/src/tryCatch.js","tryer","catcher","e","../node_modules/ramda/src/type.js","../node_modules/ramda/src/unapply.js","../node_modules/ramda/src/unary.js","../node_modules/ramda/src/uncurryN.js","depth","endIdx","currentDepth","../node_modules/ramda/src/unfold.js","seed","../node_modules/ramda/src/union.js","../node_modules/ramda/src/unionWith.js","../node_modules/ramda/src/uniq.js","../node_modules/ramda/src/uniqBy.js","appliedItem","../node_modules/ramda/src/uniqWith.js","../node_modules/ramda/src/unless.js","whenFalseFn","../node_modules/ramda/src/unnest.js","../node_modules/ramda/src/until.js","../node_modules/ramda/src/update.js","../node_modules/ramda/src/useWith.js","transformers","../node_modules/ramda/src/values.js","vals","../node_modules/ramda/src/valuesIn.js","vs","../node_modules/ramda/src/view.js","Const","../node_modules/ramda/src/when.js","whenTrueFn","../node_modules/ramda/src/where.js","testObj","../node_modules/ramda/src/whereEq.js","../node_modules/ramda/src/without.js","../node_modules/ramda/src/xprod.js","../node_modules/ramda/src/zip.js","rv","../node_modules/ramda/src/zipObj.js","../node_modules/ramda/src/zipWith.js","./scripts/app.js","_interopRequireDefault","default","_shuffle","_shuffle2","_dragAndDrop","_app","hexagons","document","querySelectorAll","piecesContainer","querySelector","pieces","getElementById","hint","reset","hardMode","timer","solved","unsolved","startSound","failSound","winSound","resetSound","remainingTime","timerIntervalID","updateTimer","time","classList","innerHTML","resetGame","hexagon","piece","appendChild","checked","disabled","clearInterval","failed","play","resetButton","win","timerInterval","checkResolved","resolved","every","firstElementChild","getAttribute","dropAndCheck","event","dropPiece","showHint","hideHint","startGame","setInterval","toggleHardMode","addEventListener","dragOver","pickImage","./scripts/drag-and-drop.js","preventDefault","dataTransfer","dropEffect","destination","currentTarget","dataEmpty","getData","setAttribute","origin","setData","id","parentNode","./scripts/shuffle.js","_toConsumableArray","arr2","_ramda","_ramda2","getChildren","pieceContainer","children","shuffleArray","random","relocateInDOM","insertBefore","shufflePieces","./styles/app.scss"],"mappings":"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","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./scripts/app.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"../node_modules/ramda/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  F: __webpack_require__(\"../node_modules/ramda/src/F.js\"),\n  T: __webpack_require__(\"../node_modules/ramda/src/T.js\"),\n  __: __webpack_require__(\"../node_modules/ramda/src/__.js\"),\n  add: __webpack_require__(\"../node_modules/ramda/src/add.js\"),\n  addIndex: __webpack_require__(\"../node_modules/ramda/src/addIndex.js\"),\n  adjust: __webpack_require__(\"../node_modules/ramda/src/adjust.js\"),\n  all: __webpack_require__(\"../node_modules/ramda/src/all.js\"),\n  allPass: __webpack_require__(\"../node_modules/ramda/src/allPass.js\"),\n  always: __webpack_require__(\"../node_modules/ramda/src/always.js\"),\n  and: __webpack_require__(\"../node_modules/ramda/src/and.js\"),\n  any: __webpack_require__(\"../node_modules/ramda/src/any.js\"),\n  anyPass: __webpack_require__(\"../node_modules/ramda/src/anyPass.js\"),\n  ap: __webpack_require__(\"../node_modules/ramda/src/ap.js\"),\n  aperture: __webpack_require__(\"../node_modules/ramda/src/aperture.js\"),\n  append: __webpack_require__(\"../node_modules/ramda/src/append.js\"),\n  apply: __webpack_require__(\"../node_modules/ramda/src/apply.js\"),\n  applySpec: __webpack_require__(\"../node_modules/ramda/src/applySpec.js\"),\n  ascend: __webpack_require__(\"../node_modules/ramda/src/ascend.js\"),\n  assoc: __webpack_require__(\"../node_modules/ramda/src/assoc.js\"),\n  assocPath: __webpack_require__(\"../node_modules/ramda/src/assocPath.js\"),\n  binary: __webpack_require__(\"../node_modules/ramda/src/binary.js\"),\n  bind: __webpack_require__(\"../node_modules/ramda/src/bind.js\"),\n  both: __webpack_require__(\"../node_modules/ramda/src/both.js\"),\n  call: __webpack_require__(\"../node_modules/ramda/src/call.js\"),\n  chain: __webpack_require__(\"../node_modules/ramda/src/chain.js\"),\n  clamp: __webpack_require__(\"../node_modules/ramda/src/clamp.js\"),\n  clone: __webpack_require__(\"../node_modules/ramda/src/clone.js\"),\n  comparator: __webpack_require__(\"../node_modules/ramda/src/comparator.js\"),\n  complement: __webpack_require__(\"../node_modules/ramda/src/complement.js\"),\n  compose: __webpack_require__(\"../node_modules/ramda/src/compose.js\"),\n  composeK: __webpack_require__(\"../node_modules/ramda/src/composeK.js\"),\n  composeP: __webpack_require__(\"../node_modules/ramda/src/composeP.js\"),\n  concat: __webpack_require__(\"../node_modules/ramda/src/concat.js\"),\n  cond: __webpack_require__(\"../node_modules/ramda/src/cond.js\"),\n  construct: __webpack_require__(\"../node_modules/ramda/src/construct.js\"),\n  constructN: __webpack_require__(\"../node_modules/ramda/src/constructN.js\"),\n  contains: __webpack_require__(\"../node_modules/ramda/src/contains.js\"),\n  converge: __webpack_require__(\"../node_modules/ramda/src/converge.js\"),\n  countBy: __webpack_require__(\"../node_modules/ramda/src/countBy.js\"),\n  curry: __webpack_require__(\"../node_modules/ramda/src/curry.js\"),\n  curryN: __webpack_require__(\"../node_modules/ramda/src/curryN.js\"),\n  dec: __webpack_require__(\"../node_modules/ramda/src/dec.js\"),\n  descend: __webpack_require__(\"../node_modules/ramda/src/descend.js\"),\n  defaultTo: __webpack_require__(\"../node_modules/ramda/src/defaultTo.js\"),\n  difference: __webpack_require__(\"../node_modules/ramda/src/difference.js\"),\n  differenceWith: __webpack_require__(\"../node_modules/ramda/src/differenceWith.js\"),\n  dissoc: __webpack_require__(\"../node_modules/ramda/src/dissoc.js\"),\n  dissocPath: __webpack_require__(\"../node_modules/ramda/src/dissocPath.js\"),\n  divide: __webpack_require__(\"../node_modules/ramda/src/divide.js\"),\n  drop: __webpack_require__(\"../node_modules/ramda/src/drop.js\"),\n  dropLast: __webpack_require__(\"../node_modules/ramda/src/dropLast.js\"),\n  dropLastWhile: __webpack_require__(\"../node_modules/ramda/src/dropLastWhile.js\"),\n  dropRepeats: __webpack_require__(\"../node_modules/ramda/src/dropRepeats.js\"),\n  dropRepeatsWith: __webpack_require__(\"../node_modules/ramda/src/dropRepeatsWith.js\"),\n  dropWhile: __webpack_require__(\"../node_modules/ramda/src/dropWhile.js\"),\n  either: __webpack_require__(\"../node_modules/ramda/src/either.js\"),\n  empty: __webpack_require__(\"../node_modules/ramda/src/empty.js\"),\n  eqBy: __webpack_require__(\"../node_modules/ramda/src/eqBy.js\"),\n  eqProps: __webpack_require__(\"../node_modules/ramda/src/eqProps.js\"),\n  equals: __webpack_require__(\"../node_modules/ramda/src/equals.js\"),\n  evolve: __webpack_require__(\"../node_modules/ramda/src/evolve.js\"),\n  filter: __webpack_require__(\"../node_modules/ramda/src/filter.js\"),\n  find: __webpack_require__(\"../node_modules/ramda/src/find.js\"),\n  findIndex: __webpack_require__(\"../node_modules/ramda/src/findIndex.js\"),\n  findLast: __webpack_require__(\"../node_modules/ramda/src/findLast.js\"),\n  findLastIndex: __webpack_require__(\"../node_modules/ramda/src/findLastIndex.js\"),\n  flatten: __webpack_require__(\"../node_modules/ramda/src/flatten.js\"),\n  flip: __webpack_require__(\"../node_modules/ramda/src/flip.js\"),\n  forEach: __webpack_require__(\"../node_modules/ramda/src/forEach.js\"),\n  forEachObjIndexed: __webpack_require__(\"../node_modules/ramda/src/forEachObjIndexed.js\"),\n  fromPairs: __webpack_require__(\"../node_modules/ramda/src/fromPairs.js\"),\n  groupBy: __webpack_require__(\"../node_modules/ramda/src/groupBy.js\"),\n  groupWith: __webpack_require__(\"../node_modules/ramda/src/groupWith.js\"),\n  gt: __webpack_require__(\"../node_modules/ramda/src/gt.js\"),\n  gte: __webpack_require__(\"../node_modules/ramda/src/gte.js\"),\n  has: __webpack_require__(\"../node_modules/ramda/src/has.js\"),\n  hasIn: __webpack_require__(\"../node_modules/ramda/src/hasIn.js\"),\n  head: __webpack_require__(\"../node_modules/ramda/src/head.js\"),\n  identical: __webpack_require__(\"../node_modules/ramda/src/identical.js\"),\n  identity: __webpack_require__(\"../node_modules/ramda/src/identity.js\"),\n  ifElse: __webpack_require__(\"../node_modules/ramda/src/ifElse.js\"),\n  inc: __webpack_require__(\"../node_modules/ramda/src/inc.js\"),\n  indexBy: __webpack_require__(\"../node_modules/ramda/src/indexBy.js\"),\n  indexOf: __webpack_require__(\"../node_modules/ramda/src/indexOf.js\"),\n  init: __webpack_require__(\"../node_modules/ramda/src/init.js\"),\n  insert: __webpack_require__(\"../node_modules/ramda/src/insert.js\"),\n  insertAll: __webpack_require__(\"../node_modules/ramda/src/insertAll.js\"),\n  intersection: __webpack_require__(\"../node_modules/ramda/src/intersection.js\"),\n  intersectionWith: __webpack_require__(\"../node_modules/ramda/src/intersectionWith.js\"),\n  intersperse: __webpack_require__(\"../node_modules/ramda/src/intersperse.js\"),\n  into: __webpack_require__(\"../node_modules/ramda/src/into.js\"),\n  invert: __webpack_require__(\"../node_modules/ramda/src/invert.js\"),\n  invertObj: __webpack_require__(\"../node_modules/ramda/src/invertObj.js\"),\n  invoker: __webpack_require__(\"../node_modules/ramda/src/invoker.js\"),\n  is: __webpack_require__(\"../node_modules/ramda/src/is.js\"),\n  isArrayLike: __webpack_require__(\"../node_modules/ramda/src/isArrayLike.js\"),\n  isEmpty: __webpack_require__(\"../node_modules/ramda/src/isEmpty.js\"),\n  isNil: __webpack_require__(\"../node_modules/ramda/src/isNil.js\"),\n  join: __webpack_require__(\"../node_modules/ramda/src/join.js\"),\n  juxt: __webpack_require__(\"../node_modules/ramda/src/juxt.js\"),\n  keys: __webpack_require__(\"../node_modules/ramda/src/keys.js\"),\n  keysIn: __webpack_require__(\"../node_modules/ramda/src/keysIn.js\"),\n  last: __webpack_require__(\"../node_modules/ramda/src/last.js\"),\n  lastIndexOf: __webpack_require__(\"../node_modules/ramda/src/lastIndexOf.js\"),\n  length: __webpack_require__(\"../node_modules/ramda/src/length.js\"),\n  lens: __webpack_require__(\"../node_modules/ramda/src/lens.js\"),\n  lensIndex: __webpack_require__(\"../node_modules/ramda/src/lensIndex.js\"),\n  lensPath: __webpack_require__(\"../node_modules/ramda/src/lensPath.js\"),\n  lensProp: __webpack_require__(\"../node_modules/ramda/src/lensProp.js\"),\n  lift: __webpack_require__(\"../node_modules/ramda/src/lift.js\"),\n  liftN: __webpack_require__(\"../node_modules/ramda/src/liftN.js\"),\n  lt: __webpack_require__(\"../node_modules/ramda/src/lt.js\"),\n  lte: __webpack_require__(\"../node_modules/ramda/src/lte.js\"),\n  map: __webpack_require__(\"../node_modules/ramda/src/map.js\"),\n  mapAccum: __webpack_require__(\"../node_modules/ramda/src/mapAccum.js\"),\n  mapAccumRight: __webpack_require__(\"../node_modules/ramda/src/mapAccumRight.js\"),\n  mapObjIndexed: __webpack_require__(\"../node_modules/ramda/src/mapObjIndexed.js\"),\n  match: __webpack_require__(\"../node_modules/ramda/src/match.js\"),\n  mathMod: __webpack_require__(\"../node_modules/ramda/src/mathMod.js\"),\n  max: __webpack_require__(\"../node_modules/ramda/src/max.js\"),\n  maxBy: __webpack_require__(\"../node_modules/ramda/src/maxBy.js\"),\n  mean: __webpack_require__(\"../node_modules/ramda/src/mean.js\"),\n  median: __webpack_require__(\"../node_modules/ramda/src/median.js\"),\n  memoize: __webpack_require__(\"../node_modules/ramda/src/memoize.js\"),\n  merge: __webpack_require__(\"../node_modules/ramda/src/merge.js\"),\n  mergeAll: __webpack_require__(\"../node_modules/ramda/src/mergeAll.js\"),\n  mergeWith: __webpack_require__(\"../node_modules/ramda/src/mergeWith.js\"),\n  mergeWithKey: __webpack_require__(\"../node_modules/ramda/src/mergeWithKey.js\"),\n  min: __webpack_require__(\"../node_modules/ramda/src/min.js\"),\n  minBy: __webpack_require__(\"../node_modules/ramda/src/minBy.js\"),\n  modulo: __webpack_require__(\"../node_modules/ramda/src/modulo.js\"),\n  multiply: __webpack_require__(\"../node_modules/ramda/src/multiply.js\"),\n  nAry: __webpack_require__(\"../node_modules/ramda/src/nAry.js\"),\n  negate: __webpack_require__(\"../node_modules/ramda/src/negate.js\"),\n  none: __webpack_require__(\"../node_modules/ramda/src/none.js\"),\n  not: __webpack_require__(\"../node_modules/ramda/src/not.js\"),\n  nth: __webpack_require__(\"../node_modules/ramda/src/nth.js\"),\n  nthArg: __webpack_require__(\"../node_modules/ramda/src/nthArg.js\"),\n  objOf: __webpack_require__(\"../node_modules/ramda/src/objOf.js\"),\n  of: __webpack_require__(\"../node_modules/ramda/src/of.js\"),\n  omit: __webpack_require__(\"../node_modules/ramda/src/omit.js\"),\n  once: __webpack_require__(\"../node_modules/ramda/src/once.js\"),\n  or: __webpack_require__(\"../node_modules/ramda/src/or.js\"),\n  over: __webpack_require__(\"../node_modules/ramda/src/over.js\"),\n  pair: __webpack_require__(\"../node_modules/ramda/src/pair.js\"),\n  partial: __webpack_require__(\"../node_modules/ramda/src/partial.js\"),\n  partialRight: __webpack_require__(\"../node_modules/ramda/src/partialRight.js\"),\n  partition: __webpack_require__(\"../node_modules/ramda/src/partition.js\"),\n  path: __webpack_require__(\"../node_modules/ramda/src/path.js\"),\n  pathEq: __webpack_require__(\"../node_modules/ramda/src/pathEq.js\"),\n  pathOr: __webpack_require__(\"../node_modules/ramda/src/pathOr.js\"),\n  pathSatisfies: __webpack_require__(\"../node_modules/ramda/src/pathSatisfies.js\"),\n  pick: __webpack_require__(\"../node_modules/ramda/src/pick.js\"),\n  pickAll: __webpack_require__(\"../node_modules/ramda/src/pickAll.js\"),\n  pickBy: __webpack_require__(\"../node_modules/ramda/src/pickBy.js\"),\n  pipe: __webpack_require__(\"../node_modules/ramda/src/pipe.js\"),\n  pipeK: __webpack_require__(\"../node_modules/ramda/src/pipeK.js\"),\n  pipeP: __webpack_require__(\"../node_modules/ramda/src/pipeP.js\"),\n  pluck: __webpack_require__(\"../node_modules/ramda/src/pluck.js\"),\n  prepend: __webpack_require__(\"../node_modules/ramda/src/prepend.js\"),\n  product: __webpack_require__(\"../node_modules/ramda/src/product.js\"),\n  project: __webpack_require__(\"../node_modules/ramda/src/project.js\"),\n  prop: __webpack_require__(\"../node_modules/ramda/src/prop.js\"),\n  propEq: __webpack_require__(\"../node_modules/ramda/src/propEq.js\"),\n  propIs: __webpack_require__(\"../node_modules/ramda/src/propIs.js\"),\n  propOr: __webpack_require__(\"../node_modules/ramda/src/propOr.js\"),\n  propSatisfies: __webpack_require__(\"../node_modules/ramda/src/propSatisfies.js\"),\n  props: __webpack_require__(\"../node_modules/ramda/src/props.js\"),\n  range: __webpack_require__(\"../node_modules/ramda/src/range.js\"),\n  reduce: __webpack_require__(\"../node_modules/ramda/src/reduce.js\"),\n  reduceBy: __webpack_require__(\"../node_modules/ramda/src/reduceBy.js\"),\n  reduceRight: __webpack_require__(\"../node_modules/ramda/src/reduceRight.js\"),\n  reduceWhile: __webpack_require__(\"../node_modules/ramda/src/reduceWhile.js\"),\n  reduced: __webpack_require__(\"../node_modules/ramda/src/reduced.js\"),\n  reject: __webpack_require__(\"../node_modules/ramda/src/reject.js\"),\n  remove: __webpack_require__(\"../node_modules/ramda/src/remove.js\"),\n  repeat: __webpack_require__(\"../node_modules/ramda/src/repeat.js\"),\n  replace: __webpack_require__(\"../node_modules/ramda/src/replace.js\"),\n  reverse: __webpack_require__(\"../node_modules/ramda/src/reverse.js\"),\n  scan: __webpack_require__(\"../node_modules/ramda/src/scan.js\"),\n  sequence: __webpack_require__(\"../node_modules/ramda/src/sequence.js\"),\n  set: __webpack_require__(\"../node_modules/ramda/src/set.js\"),\n  slice: __webpack_require__(\"../node_modules/ramda/src/slice.js\"),\n  sort: __webpack_require__(\"../node_modules/ramda/src/sort.js\"),\n  sortBy: __webpack_require__(\"../node_modules/ramda/src/sortBy.js\"),\n  sortWith: __webpack_require__(\"../node_modules/ramda/src/sortWith.js\"),\n  split: __webpack_require__(\"../node_modules/ramda/src/split.js\"),\n  splitAt: __webpack_require__(\"../node_modules/ramda/src/splitAt.js\"),\n  splitEvery: __webpack_require__(\"../node_modules/ramda/src/splitEvery.js\"),\n  splitWhen: __webpack_require__(\"../node_modules/ramda/src/splitWhen.js\"),\n  subtract: __webpack_require__(\"../node_modules/ramda/src/subtract.js\"),\n  sum: __webpack_require__(\"../node_modules/ramda/src/sum.js\"),\n  symmetricDifference: __webpack_require__(\"../node_modules/ramda/src/symmetricDifference.js\"),\n  symmetricDifferenceWith: __webpack_require__(\"../node_modules/ramda/src/symmetricDifferenceWith.js\"),\n  tail: __webpack_require__(\"../node_modules/ramda/src/tail.js\"),\n  take: __webpack_require__(\"../node_modules/ramda/src/take.js\"),\n  takeLast: __webpack_require__(\"../node_modules/ramda/src/takeLast.js\"),\n  takeLastWhile: __webpack_require__(\"../node_modules/ramda/src/takeLastWhile.js\"),\n  takeWhile: __webpack_require__(\"../node_modules/ramda/src/takeWhile.js\"),\n  tap: __webpack_require__(\"../node_modules/ramda/src/tap.js\"),\n  test: __webpack_require__(\"../node_modules/ramda/src/test.js\"),\n  times: __webpack_require__(\"../node_modules/ramda/src/times.js\"),\n  toLower: __webpack_require__(\"../node_modules/ramda/src/toLower.js\"),\n  toPairs: __webpack_require__(\"../node_modules/ramda/src/toPairs.js\"),\n  toPairsIn: __webpack_require__(\"../node_modules/ramda/src/toPairsIn.js\"),\n  toString: __webpack_require__(\"../node_modules/ramda/src/toString.js\"),\n  toUpper: __webpack_require__(\"../node_modules/ramda/src/toUpper.js\"),\n  transduce: __webpack_require__(\"../node_modules/ramda/src/transduce.js\"),\n  transpose: __webpack_require__(\"../node_modules/ramda/src/transpose.js\"),\n  traverse: __webpack_require__(\"../node_modules/ramda/src/traverse.js\"),\n  trim: __webpack_require__(\"../node_modules/ramda/src/trim.js\"),\n  tryCatch: __webpack_require__(\"../node_modules/ramda/src/tryCatch.js\"),\n  type: __webpack_require__(\"../node_modules/ramda/src/type.js\"),\n  unapply: __webpack_require__(\"../node_modules/ramda/src/unapply.js\"),\n  unary: __webpack_require__(\"../node_modules/ramda/src/unary.js\"),\n  uncurryN: __webpack_require__(\"../node_modules/ramda/src/uncurryN.js\"),\n  unfold: __webpack_require__(\"../node_modules/ramda/src/unfold.js\"),\n  union: __webpack_require__(\"../node_modules/ramda/src/union.js\"),\n  unionWith: __webpack_require__(\"../node_modules/ramda/src/unionWith.js\"),\n  uniq: __webpack_require__(\"../node_modules/ramda/src/uniq.js\"),\n  uniqBy: __webpack_require__(\"../node_modules/ramda/src/uniqBy.js\"),\n  uniqWith: __webpack_require__(\"../node_modules/ramda/src/uniqWith.js\"),\n  unless: __webpack_require__(\"../node_modules/ramda/src/unless.js\"),\n  unnest: __webpack_require__(\"../node_modules/ramda/src/unnest.js\"),\n  until: __webpack_require__(\"../node_modules/ramda/src/until.js\"),\n  update: __webpack_require__(\"../node_modules/ramda/src/update.js\"),\n  useWith: __webpack_require__(\"../node_modules/ramda/src/useWith.js\"),\n  values: __webpack_require__(\"../node_modules/ramda/src/values.js\"),\n  valuesIn: __webpack_require__(\"../node_modules/ramda/src/valuesIn.js\"),\n  view: __webpack_require__(\"../node_modules/ramda/src/view.js\"),\n  when: __webpack_require__(\"../node_modules/ramda/src/when.js\"),\n  where: __webpack_require__(\"../node_modules/ramda/src/where.js\"),\n  whereEq: __webpack_require__(\"../node_modules/ramda/src/whereEq.js\"),\n  without: __webpack_require__(\"../node_modules/ramda/src/without.js\"),\n  xprod: __webpack_require__(\"../node_modules/ramda/src/xprod.js\"),\n  zip: __webpack_require__(\"../node_modules/ramda/src/zip.js\"),\n  zipObj: __webpack_require__(\"../node_modules/ramda/src/zipObj.js\"),\n  zipWith: __webpack_require__(\"../node_modules/ramda/src/zipWith.js\")\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/F.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar always = __webpack_require__(\"../node_modules/ramda/src/always.js\");\n\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nmodule.exports = always(false);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/T.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar always = __webpack_require__(\"../node_modules/ramda/src/always.js\");\n\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nmodule.exports = always(true);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/__.js\":\n/***/ (function(module, exports) {\n\n/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/add.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/addIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, Ramda's simple `map` function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/adjust.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/all.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xall = __webpack_require__(\"../node_modules/ramda/src/internal/_xall.js\");\n\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/allPass.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar max = __webpack_require__(\"../node_modules/ramda/src/max.js\");\nvar pluck = __webpack_require__(\"../node_modules/ramda/src/pluck.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/always.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/and.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/any.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xany = __webpack_require__(\"../node_modules/ramda/src/internal/_xany.js\");\n\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/anyPass.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar max = __webpack_require__(\"../node_modules/ramda/src/max.js\");\nvar pluck = __webpack_require__(\"../node_modules/ramda/src/pluck.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/ap.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {Array} fns An array of functions\n * @param {Array} vs An array of values\n * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applicative, fn) {\n  return (\n    typeof applicative.ap === 'function' ?\n      applicative.ap(fn) :\n    typeof applicative === 'function' ?\n      function(x) { return applicative(x)(fn(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, fn)); }, [], applicative)\n  );\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/aperture.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _aperture = __webpack_require__(\"../node_modules/ramda/src/internal/_aperture.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xaperture = __webpack_require__(\"../node_modules/ramda/src/internal/_xaperture.js\");\n\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/append.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/apply.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/applySpec.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar apply = __webpack_require__(\"../node_modules/ramda/src/apply.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar max = __webpack_require__(\"../node_modules/ramda/src/max.js\");\nvar pluck = __webpack_require__(\"../node_modules/ramda/src/pluck.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\nvar values = __webpack_require__(\"../node_modules/ramda/src/values.js\");\n\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n             spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))),\n                function() {\n                  var args = arguments;\n                  return map(function(f) { return apply(f, args); }, spec);\n                });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/ascend.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/assoc.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/assocPath.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar _isInteger = __webpack_require__(\"../node_modules/ramda/src/internal/_isInteger.js\");\nvar assoc = __webpack_require__(\"../node_modules/ramda/src/assoc.js\");\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/binary.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar nAry = __webpack_require__(\"../node_modules/ramda/src/nAry.js\");\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/bind.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/both.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isFunction = __webpack_require__(\"../node_modules/ramda/src/internal/_isFunction.js\");\nvar and = __webpack_require__(\"../node_modules/ramda/src/and.js\");\nvar lift = __webpack_require__(\"../node_modules/ramda/src/lift.js\");\n\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ?\n    function _both() {\n      return f.apply(this, arguments) && g.apply(this, arguments);\n    } :\n    lift(and)(f, g);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/call.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curry = __webpack_require__(\"../node_modules/ramda/src/curry.js\");\n\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * `R.converge`: the left branch can produce a function while the right branch\n * produces a value to be passed to that function as an argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/chain.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _makeFlat = __webpack_require__(\"../node_modules/ramda/src/internal/_makeFlat.js\");\nvar _xchain = __webpack_require__(\"../node_modules/ramda/src/internal/_xchain.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nmodule.exports = _curry2(_dispatchable(['chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function(x) { return fn(monad(x))(x); };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/clamp.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min :\n         value > max ? max :\n         value;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/clone.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clone = __webpack_require__(\"../node_modules/ramda/src/internal/_clone.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/comparator.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nmodule.exports = _curry1(function comparator(pred) {\n  return function(a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/complement.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar lift = __webpack_require__(\"../node_modules/ramda/src/lift.js\");\nvar not = __webpack_require__(\"../node_modules/ramda/src/not.js\");\n\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nmodule.exports = lift(not);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/compose.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pipe = __webpack_require__(\"../node_modules/ramda/src/pipe.js\");\nvar reverse = __webpack_require__(\"../node_modules/ramda/src/reverse.js\");\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/composeK.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar chain = __webpack_require__(\"../node_modules/ramda/src/chain.js\");\nvar compose = __webpack_require__(\"../node_modules/ramda/src/compose.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/composeP.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pipeP = __webpack_require__(\"../node_modules/ramda/src/pipeP.js\");\nvar reverse = __webpack_require__(\"../node_modules/ramda/src/reverse.js\");\n\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/concat.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar _isFunction = __webpack_require__(\"../node_modules/ramda/src/internal/_isFunction.js\");\nvar toString = __webpack_require__(\"../node_modules/ramda/src/toString.js\");\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (a == null || !_isFunction(a.concat)) {\n    throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n  }\n  if (_isArray(a) && !_isArray(b)) {\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  return a.concat(b);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/cond.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar max = __webpack_require__(\"../node_modules/ramda/src/max.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max,\n                     0,\n                     map(function(pair) { return pair[0].length; }, pairs));\n  return _arity(arity, function() {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/construct.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar constructN = __webpack_require__(\"../node_modules/ramda/src/constructN.js\");\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/constructN.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar curry = __webpack_require__(\"../node_modules/ramda/src/curry.js\");\nvar nAry = __webpack_require__(\"../node_modules/ramda/src/nAry.js\");\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/contains.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n * least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/converge.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _map = __webpack_require__(\"../node_modules/ramda/src/internal/_map.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar max = __webpack_require__(\"../node_modules/ramda/src/max.js\");\nvar pluck = __webpack_require__(\"../node_modules/ramda/src/pluck.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/countBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar reduceBy = __webpack_require__(\"../node_modules/ramda/src/reduceBy.js\");\n\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/curry.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/curryN.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _curryN = __webpack_require__(\"../node_modules/ramda/src/internal/_curryN.js\");\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dec.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar add = __webpack_require__(\"../node_modules/ramda/src/add.js\");\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/defaultTo.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/descend.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/difference.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared are compared\n * in terms of value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/differenceWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _containsWith = __webpack_require__(\"../node_modules/ramda/src/internal/_containsWith.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) &&\n        !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dissoc.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dissocPath.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar assoc = __webpack_require__(\"../node_modules/ramda/src/assoc.js\");\nvar dissoc = __webpack_require__(\"../node_modules/ramda/src/dissoc.js\");\n\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @sig [String] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n  }\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/divide.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nmodule.exports = _curry2(function divide(a, b) { return a / b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/drop.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xdrop = __webpack_require__(\"../node_modules/ramda/src/internal/_xdrop.js\");\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {[a]} list\n * @return {[a]} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dropLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _dropLast = __webpack_require__(\"../node_modules/ramda/src/internal/_dropLast.js\");\nvar _xdropLast = __webpack_require__(\"../node_modules/ramda/src/internal/_xdropLast.js\");\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dropLastWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _dropLastWhile = __webpack_require__(\"../node_modules/ramda/src/internal/_dropLastWhile.js\");\nvar _xdropLastWhile = __webpack_require__(\"../node_modules/ramda/src/internal/_xdropLastWhile.js\");\n\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dropRepeats.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xdropRepeatsWith = __webpack_require__(\"../node_modules/ramda/src/internal/_xdropRepeatsWith.js\");\nvar dropRepeatsWith = __webpack_require__(\"../node_modules/ramda/src/dropRepeatsWith.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Returns a new list without any consecutively repeating elements. `R.equals`\n * is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dropRepeatsWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xdropRepeatsWith = __webpack_require__(\"../node_modules/ramda/src/internal/_xdropRepeatsWith.js\");\nvar last = __webpack_require__(\"../node_modules/ramda/src/last.js\");\n\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\n\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/dropWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xdropWhile = __webpack_require__(\"../node_modules/ramda/src/internal/_xdropWhile.js\");\n\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, idx);\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/either.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isFunction = __webpack_require__(\"../node_modules/ramda/src/internal/_isFunction.js\");\nvar lift = __webpack_require__(\"../node_modules/ramda/src/lift.js\");\nvar or = __webpack_require__(\"../node_modules/ramda/src/or.js\");\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/empty.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _isArguments = __webpack_require__(\"../node_modules/ramda/src/internal/_isArguments.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar _isObject = __webpack_require__(\"../node_modules/ramda/src/internal/_isObject.js\");\nvar _isString = __webpack_require__(\"../node_modules/ramda/src/internal/_isString.js\");\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/eqBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/eqProps.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Reports whether two objects have the same value, in `R.equals` terms, for\n * the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/equals.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _equals = __webpack_require__(\"../node_modules/ramda/src/internal/_equals.js\");\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/evolve.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/filter.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _filter = __webpack_require__(\"../node_modules/ramda/src/internal/_filter.js\");\nvar _isObject = __webpack_require__(\"../node_modules/ramda/src/internal/_isObject.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xfilter = __webpack_require__(\"../node_modules/ramda/src/internal/_xfilter.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Takes a predicate and a \"filterable\", and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/find.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xfind = __webpack_require__(\"../node_modules/ramda/src/internal/_xfind.js\");\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/findIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xfindIndex = __webpack_require__(\"../node_modules/ramda/src/internal/_xfindIndex.js\");\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/findLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xfindLast = __webpack_require__(\"../node_modules/ramda/src/internal/_xfindLast.js\");\n\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/findLastIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xfindLastIndex = __webpack_require__(\"../node_modules/ramda/src/internal/_xfindLastIndex.js\");\n\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/flatten.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _makeFlat = __webpack_require__(\"../node_modules/ramda/src/internal/_makeFlat.js\");\n\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nmodule.exports = _curry1(_makeFlat(true));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/flip.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curry = __webpack_require__(\"../node_modules/ramda/src/curry.js\");\n\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function(a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/forEach.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _checkForMethod = __webpack_require__(\"../node_modules/ramda/src/internal/_checkForMethod.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/forEachObjIndexed.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/fromPairs.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/groupBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _checkForMethod = __webpack_require__(\"../node_modules/ramda/src/internal/_checkForMethod.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar reduceBy = __webpack_require__(\"../node_modules/ramda/src/reduceBy.js\");\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/groupWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all \"equal\" according to the provided equality function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of equal elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nmodule.exports = _curry2(function(fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[idx], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/gt.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/gte.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/has.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nmodule.exports = _curry2(_has);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/hasIn.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/head.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nth = __webpack_require__(\"../node_modules/ramda/src/nth.js\");\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/identical.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/identity.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _identity = __webpack_require__(\"../node_modules/ramda/src/internal/_identity.js\");\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/ifElse.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/inc.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar add = __webpack_require__(\"../node_modules/ramda/src/add.js\");\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/indexBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar reduceBy = __webpack_require__(\"../node_modules/ramda/src/reduceBy.js\");\n\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/indexOf.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _indexOf = __webpack_require__(\"../node_modules/ramda/src/internal/_indexOf.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\n\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. `R.equals` is used to determine\n * equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n    xs.indexOf(target) :\n    _indexOf(xs, target, 0);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/init.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/insert.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Inserts the supplied element into the list, at index `index`. _Note that\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/insertAll.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Inserts the sub-list into the list, at index `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx),\n                   elts,\n                   Array.prototype.slice.call(list, idx));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_Set.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\n\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = (function() {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function(item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function(item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n            return false;\n          }\n        }\n        // these types can all utilise the native Set\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n            return false;\n          }\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n            return false;\n          }\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n            return false;\n          }\n          return true;\n        }\n      /* falls through */\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        // scan through all previously applied items\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n    }\n  }\n  return _Set;\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_aperture.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_arity.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_arrayFromIterator.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_assign.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _objectAssign = __webpack_require__(\"../node_modules/ramda/src/internal/_objectAssign.js\");\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_checkForMethod.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_clone.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _cloneRegExp = __webpack_require__(\"../node_modules/ramda/src/internal/_cloneRegExp.js\");\nvar type = __webpack_require__(\"../node_modules/ramda/src/type.js\");\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_cloneRegExp.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_complement.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_concat.js\":\n/***/ (function(module, exports) {\n\n/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_contains.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _indexOf = __webpack_require__(\"../node_modules/ramda/src/internal/_indexOf.js\");\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_containsWith.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_createPartialApplicator.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function(fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function() {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_curry1.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _isPlaceholder = __webpack_require__(\"../node_modules/ramda/src/internal/_isPlaceholder.js\");\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_curry2.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _isPlaceholder = __webpack_require__(\"../node_modules/ramda/src/internal/_isPlaceholder.js\");\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_curry3.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isPlaceholder = __webpack_require__(\"../node_modules/ramda/src/internal/_isPlaceholder.js\");\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_curryN.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _isPlaceholder = __webpack_require__(\"../node_modules/ramda/src/internal/_isPlaceholder.js\");\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_dispatchable.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar _isTransformer = __webpack_require__(\"../node_modules/ramda/src/internal/_isTransformer.js\");\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_dropLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar take = __webpack_require__(\"../node_modules/ramda/src/take.js\");\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_dropLastWhile.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_equals.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arrayFromIterator = __webpack_require__(\"../node_modules/ramda/src/internal/_arrayFromIterator.js\");\nvar _functionName = __webpack_require__(\"../node_modules/ramda/src/internal/_functionName.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar identical = __webpack_require__(\"../node_modules/ramda/src/identical.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\nvar type = __webpack_require__(\"../node_modules/ramda/src/type.js\");\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_filter.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_flatCat.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _forceReduced = __webpack_require__(\"../node_modules/ramda/src/internal/_forceReduced.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\nvar isArrayLike = __webpack_require__(\"../node_modules/ramda/src/isArrayLike.js\");\n\nmodule.exports = (function() {\n  var preservingReduced = function(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_forceReduced.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_functionName.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_has.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_identity.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _identity(x) { return x; };\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_indexOf.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isArguments.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isArray.js\":\n/***/ (function(module, exports) {\n\n/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isFunction.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isInteger.js\":\n/***/ (function(module, exports) {\n\n/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return (n << 0) === n;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isNumber.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isObject.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isPlaceholder.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isRegExp.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isString.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_isTransformer.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_makeFlat.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(\"../node_modules/ramda/src/isArrayLike.js\");\n\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_map.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_objectAssign.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_of.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _of(x) { return [x]; };\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_pipe.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_pipeP.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _pipeP(f, g) {\n  return function() {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function(x) {\n      return g.call(ctx, x);\n    });\n  };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_quote.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_reduce.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _xwrap = __webpack_require__(\"../node_modules/ramda/src/internal/_xwrap.js\");\nvar bind = __webpack_require__(\"../node_modules/ramda/src/bind.js\");\nvar isArrayLike = __webpack_require__(\"../node_modules/ramda/src/isArrayLike.js\");\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj) {\n    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list);\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_reduced.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_stepCat.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _assign = __webpack_require__(\"../node_modules/ramda/src/internal/_assign.js\");\nvar _identity = __webpack_require__(\"../node_modules/ramda/src/internal/_identity.js\");\nvar _isTransformer = __webpack_require__(\"../node_modules/ramda/src/internal/_isTransformer.js\");\nvar isArrayLike = __webpack_require__(\"../node_modules/ramda/src/isArrayLike.js\");\nvar objOf = __webpack_require__(\"../node_modules/ramda/src/objOf.js\");\n\n\nmodule.exports = (function() {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function(a, b) { return a + b; },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function(result, input) {\n      return _assign(\n        result,\n        isArrayLike(input) ? objOf(input[0], input[1]) : input\n      );\n    },\n    '@@transducer/result': _identity\n  };\n\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n    if (isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_toISOString.js\":\n/***/ (function(module, exports) {\n\n/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_toString.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _map = __webpack_require__(\"../node_modules/ramda/src/internal/_map.js\");\nvar _quote = __webpack_require__(\"../node_modules/ramda/src/internal/_quote.js\");\nvar _toISOString = __webpack_require__(\"../node_modules/ramda/src/internal/_toISOString.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\nvar reject = __webpack_require__(\"../node_modules/ramda/src/reject.js\");\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xall.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function(result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function(result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xany.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function(result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xaperture.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xchain.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _flatCat = __webpack_require__(\"../node_modules/ramda/src/internal/_flatCat.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xdrop.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xdropLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xdropLastWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\nmodule.exports = (function() {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.retain(result, input)\n                         : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function(result, input) {\n    result = _reduce(\n      this.xf['@@transducer/step'],\n      result,\n      this.retained\n    );\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function(result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xdropRepeatsWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xdropWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfBase.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfilter.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfind.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfindIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfindLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xfindLastIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xmap.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xreduceBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curryN = __webpack_require__(\"../node_modules/ramda/src/internal/_curryN.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function(result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [],\n                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n                 });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xtake.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xtakeWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\nvar _xfBase = __webpack_require__(\"../node_modules/ramda/src/internal/_xfBase.js\");\n\n\nmodule.exports = (function() {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/internal/_xwrap.js\":\n/***/ (function(module, exports) {\n\nmodule.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/intersection.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _filter = __webpack_require__(\"../node_modules/ramda/src/internal/_filter.js\");\nvar flip = __webpack_require__(\"../node_modules/ramda/src/flip.js\");\nvar uniq = __webpack_require__(\"../node_modules/ramda/src/uniq.js\");\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.intersectionWith\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/intersectionWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _containsWith = __webpack_require__(\"../node_modules/ramda/src/internal/_containsWith.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar uniqWith = __webpack_require__(\"../node_modules/ramda/src/uniqWith.js\");\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.intersection\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  var results = [];\n  var idx = 0;\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n    idx += 1;\n  }\n  return uniqWith(pred, results);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/intersperse.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _checkForMethod = __webpack_require__(\"../node_modules/ramda/src/internal/_checkForMethod.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/into.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clone = __webpack_require__(\"../node_modules/ramda/src/internal/_clone.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar _isTransformer = __webpack_require__(\"../node_modules/ramda/src/internal/_isTransformer.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _stepCat = __webpack_require__(\"../node_modules/ramda/src/internal/_stepCat.js\");\n\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with R.reduce after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ?\n    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/invert.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Same as R.invertObj, however this accounts for objects with duplicate values\n * by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys\n * in an array.\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : (out[val] = []);\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/invertObj.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/invoker.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isFunction = __webpack_require__(\"../node_modules/ramda/src/internal/_isFunction.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar toString = __webpack_require__(\"../node_modules/ramda/src/toString.js\");\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/is.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/isArrayLike.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar _isString = __webpack_require__(\"../node_modules/ramda/src/internal/_isString.js\");\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @deprecated since v0.23.0\n * @example\n *\n *      R.isArrayLike([]); //=> true\n *      R.isArrayLike(true); //=> false\n *      R.isArrayLike({}); //=> false\n *      R.isArrayLike({length: 10}); //=> false\n *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/isEmpty.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar empty = __webpack_require__(\"../node_modules/ramda/src/empty.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/isNil.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nmodule.exports = _curry1(function isNil(x) { return x == null; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/join.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invoker = __webpack_require__(\"../node_modules/ramda/src/invoker.js\");\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/juxt.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar converge = __webpack_require__(\"../node_modules/ramda/src/converge.js\");\n\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/keys.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar _isArguments = __webpack_require__(\"../node_modules/ramda/src/internal/_isArguments.js\");\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/keysIn.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/last.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nth = __webpack_require__(\"../node_modules/ramda/src/nth.js\");\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lastIndexOf.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isArray = __webpack_require__(\"../node_modules/ramda/src/internal/_isArray.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. `R.equals` is used to determine\n * equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/length.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _isNumber = __webpack_require__(\"../node_modules/ramda/src/internal/_isNumber.js\");\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lens.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lensIndex.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar lens = __webpack_require__(\"../node_modules/ramda/src/lens.js\");\nvar nth = __webpack_require__(\"../node_modules/ramda/src/nth.js\");\nvar update = __webpack_require__(\"../node_modules/ramda/src/update.js\");\n\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lensPath.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar assocPath = __webpack_require__(\"../node_modules/ramda/src/assocPath.js\");\nvar lens = __webpack_require__(\"../node_modules/ramda/src/lens.js\");\nvar path = __webpack_require__(\"../node_modules/ramda/src/path.js\");\n\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lensProp.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar assoc = __webpack_require__(\"../node_modules/ramda/src/assoc.js\");\nvar lens = __webpack_require__(\"../node_modules/ramda/src/lens.js\");\nvar prop = __webpack_require__(\"../node_modules/ramda/src/prop.js\");\n\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lift.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar liftN = __webpack_require__(\"../node_modules/ramda/src/liftN.js\");\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/liftN.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar ap = __webpack_require__(\"../node_modules/ramda/src/ap.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lt.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lt(a, b) { return a < b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/lte.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/map.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _map = __webpack_require__(\"../node_modules/ramda/src/internal/_map.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xmap = __webpack_require__(\"../node_modules/ramda/src/internal/_xmap.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mapAccum.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * The mapAccum function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mapAccumRight.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * The mapAccumRight function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to `mapAccum`, except moves through the input list from the right to\n * the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mapObjIndexed.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * An Object-specific version of `map`. The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * `map` instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function(acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/match.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mathMod.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isInteger = __webpack_require__(\"../node_modules/ramda/src/internal/_isInteger.js\");\n\n\n/**\n * mathMod behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n * when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) { return NaN; }\n  if (!_isInteger(p) || p < 1) { return NaN; }\n  return ((m % p) + p) % p;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/max.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/maxBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mean.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar sum = __webpack_require__(\"../node_modules/ramda/src/sum.js\");\n\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/median.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar mean = __webpack_require__(\"../node_modules/ramda/src/mean.js\");\n\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/memoize.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar toString = __webpack_require__(\"../node_modules/ramda/src/toString.js\");\n\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      var count = 0;\n *      var factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = _curry1(function memoize(fn) {\n  var cache = {};\n  return _arity(fn.length, function() {\n    var key = toString(arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/merge.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _assign = __webpack_require__(\"../node_modules/ramda/src/internal/_assign.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mergeAll.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _assign = __webpack_require__(\"../node_modules/ramda/src/internal/_assign.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mergeWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar mergeWithKey = __webpack_require__(\"../node_modules/ramda/src/mergeWithKey.js\");\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object. The key will be\n * excluded from the returned object if the resulting value is `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function(_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/mergeWithKey.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object. The key\n * will be excluded from the returned object if the resulting value is\n * `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !(_has(k, result))) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/min.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/minBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/modulo.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see `mathMod`.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/multiply.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/nAry.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0: return function() {return fn.call(this);};\n    case 1: return function(a0) {return fn.call(this, a0);};\n    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/negate.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/none.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _complement = __webpack_require__(\"../node_modules/ramda/src/internal/_complement.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xany = __webpack_require__(\"../node_modules/ramda/src/internal/_xany.js\");\nvar any = __webpack_require__(\"../node_modules/ramda/src/any.js\");\n\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/not.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/nth.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isString = __webpack_require__(\"../node_modules/ramda/src/internal/_isString.js\");\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/nthArg.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\nvar nth = __webpack_require__(\"../node_modules/ramda/src/nth.js\");\n\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function() {\n    return nth(n, arguments);\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/objOf.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/of.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _of = __webpack_require__(\"../node_modules/ramda/src/internal/_of.js\");\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/omit.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/once.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function() {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/or.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/over.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pair.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/partial.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _createPartialApplicator = __webpack_require__(\"../node_modules/ramda/src/internal/_createPartialApplicator.js\");\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nmodule.exports = _createPartialApplicator(_concat);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/partialRight.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _createPartialApplicator = __webpack_require__(\"../node_modules/ramda/src/internal/_createPartialApplicator.js\");\nvar flip = __webpack_require__(\"../node_modules/ramda/src/flip.js\");\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nmodule.exports = _createPartialApplicator(flip(_concat));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/partition.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar filter = __webpack_require__(\"../node_modules/ramda/src/filter.js\");\nvar juxt = __webpack_require__(\"../node_modules/ramda/src/juxt.js\");\nvar reject = __webpack_require__(\"../node_modules/ramda/src/reject.js\");\n\n\n/**\n * Takes a predicate and a list or other \"filterable\" object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nmodule.exports = juxt([filter, reject]);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/path.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pathEq.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\nvar path = __webpack_require__(\"../node_modules/ramda/src/path.js\");\n\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * `R.equals` terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pathOr.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar defaultTo = __webpack_require__(\"../node_modules/ramda/src/defaultTo.js\");\nvar path = __webpack_require__(\"../node_modules/ramda/src/path.js\");\n\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pathSatisfies.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar path = __webpack_require__(\"../node_modules/ramda/src/path.js\");\n\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pick.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pickAll.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pickBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pipe.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _pipe = __webpack_require__(\"../node_modules/ramda/src/internal/_pipe.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\nvar tail = __webpack_require__(\"../node_modules/ramda/src/tail.js\");\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pipeK.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar composeK = __webpack_require__(\"../node_modules/ramda/src/composeK.js\");\nvar reverse = __webpack_require__(\"../node_modules/ramda/src/reverse.js\");\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pipeP.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _pipeP = __webpack_require__(\"../node_modules/ramda/src/internal/_pipeP.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\nvar tail = __webpack_require__(\"../node_modules/ramda/src/tail.js\");\n\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipeP, arguments[0], tail(arguments)));\n};\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/pluck.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar prop = __webpack_require__(\"../node_modules/ramda/src/prop.js\");\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig k -> [{k: v}] -> [v]\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} list The array to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/prepend.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/product.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar multiply = __webpack_require__(\"../node_modules/ramda/src/multiply.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nmodule.exports = reduce(multiply, 1);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/project.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _map = __webpack_require__(\"../node_modules/ramda/src/internal/_map.js\");\nvar identity = __webpack_require__(\"../node_modules/ramda/src/identity.js\");\nvar pickAll = __webpack_require__(\"../node_modules/ramda/src/pickAll.js\");\nvar useWith = __webpack_require__(\"../node_modules/ramda/src/useWith.js\");\n\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/prop.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/propEq.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\n\n\n/**\n * Returns `true` if the specified object property is equal, in `R.equals`\n * terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/propIs.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar is = __webpack_require__(\"../node_modules/ramda/src/is.js\");\n\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/propOr.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return (obj != null && _has(p, obj)) ? obj[p] : val;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/propSatisfies.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/props.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/range.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isNumber = __webpack_require__(\"../node_modules/ramda/src/internal/_isNumber.js\");\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reduce.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * `R.reduced` to shortcut the iteration.\n *\n * The arguments' order of `reduceRight`'s iterator function is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reduceBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curryN = __webpack_require__(\"../node_modules/ramda/src/internal/_curryN.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xreduceBy = __webpack_require__(\"../node_modules/ramda/src/internal/_xreduceBy.js\");\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general `groupBy` function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reduceRight.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to `reduce`, except moves through the input list from the right to\n * the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reduceWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curryN = __webpack_require__(\"../node_modules/ramda/src/internal/_curryN.js\");\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\n\n\n/**\n * Like `reduce`, `reduceWhile` returns a single item by iterating through\n * the list, successively calling the iterator function. `reduceWhile` also\n * takes a predicate that is evaluated before each step. If the predicate returns\n * `false`, it \"short-circuits\" the iteration and returns the current value\n * of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function(acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reduced.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _reduced = __webpack_require__(\"../node_modules/ramda/src/internal/_reduced.js\");\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by reduceRight.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *      R.reduce(\n *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n *        0,\n *        [1, 2, 3, 4, 5]) // 10\n */\n\nmodule.exports = _curry1(_reduced);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reject.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _complement = __webpack_require__(\"../node_modules/ramda/src/internal/_complement.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar filter = __webpack_require__(\"../node_modules/ramda/src/filter.js\");\n\n\n/**\n * The complement of `filter`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/remove.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/repeat.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar always = __webpack_require__(\"../node_modules/ramda/src/always.js\");\nvar times = __webpack_require__(\"../node_modules/ramda/src/times.js\");\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/replace.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/reverse.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _isString = __webpack_require__(\"../node_modules/ramda/src/internal/_isString.js\");\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/scan.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Scan is similar to reduce, but returns a list of successively reduced values\n * from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/sequence.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar ap = __webpack_require__(\"../node_modules/ramda/src/ap.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar prepend = __webpack_require__(\"../node_modules/ramda/src/prepend.js\");\nvar reduceRight = __webpack_require__(\"../node_modules/ramda/src/reduceRight.js\");\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/set.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar always = __webpack_require__(\"../node_modules/ramda/src/always.js\");\nvar over = __webpack_require__(\"../node_modules/ramda/src/over.js\");\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/slice.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _checkForMethod = __webpack_require__(\"../node_modules/ramda/src/internal/_checkForMethod.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/sort.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/sortBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/sortWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/split.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invoker = __webpack_require__(\"../node_modules/ramda/src/invoker.js\");\n\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nmodule.exports = invoker(1, 'split');\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/splitAt.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar length = __webpack_require__(\"../node_modules/ramda/src/length.js\");\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/splitEvery.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/splitWhen.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/subtract.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/sum.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar add = __webpack_require__(\"../node_modules/ramda/src/add.js\");\nvar reduce = __webpack_require__(\"../node_modules/ramda/src/reduce.js\");\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/symmetricDifference.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar concat = __webpack_require__(\"../node_modules/ramda/src/concat.js\");\nvar difference = __webpack_require__(\"../node_modules/ramda/src/difference.js\");\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/symmetricDifferenceWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar concat = __webpack_require__(\"../node_modules/ramda/src/concat.js\");\nvar differenceWith = __webpack_require__(\"../node_modules/ramda/src/differenceWith.js\");\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/tail.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _checkForMethod = __webpack_require__(\"../node_modules/ramda/src/internal/_checkForMethod.js\");\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/take.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xtake = __webpack_require__(\"../node_modules/ramda/src/internal/_xtake.js\");\nvar slice = __webpack_require__(\"../node_modules/ramda/src/slice.js\");\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/takeLast.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar drop = __webpack_require__(\"../node_modules/ramda/src/drop.js\");\n\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/takeLastWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, idx + 1);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/takeWhile.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _dispatchable = __webpack_require__(\"../node_modules/ramda/src/internal/_dispatchable.js\");\nvar _xtakeWhile = __webpack_require__(\"../node_modules/ramda/src/internal/_xtakeWhile.js\");\n\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx);\n}));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/tap.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/test.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _cloneRegExp = __webpack_require__(\"../node_modules/ramda/src/internal/_cloneRegExp.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _isRegExp = __webpack_require__(\"../node_modules/ramda/src/internal/_isRegExp.js\");\nvar toString = __webpack_require__(\"../node_modules/ramda/src/toString.js\");\n\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/times.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/toLower.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invoker = __webpack_require__(\"../node_modules/ramda/src/invoker.js\");\n\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nmodule.exports = invoker(0, 'toLowerCase');\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/toPairs.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/toPairsIn.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/toString.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar _toString = __webpack_require__(\"../node_modules/ramda/src/internal/_toString.js\");\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/toUpper.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invoker = __webpack_require__(\"../node_modules/ramda/src/invoker.js\");\n\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nmodule.exports = invoker(0, 'toUpperCase');\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/transduce.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _reduce = __webpack_require__(\"../node_modules/ramda/src/internal/_reduce.js\");\nvar _xwrap = __webpack_require__(\"../node_modules/ramda/src/internal/_xwrap.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the `R.reduced` function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is R.identity. The init\n * function can be used to provide an initial accumulator, but is ignored by\n * transduce.\n *\n * The iteration is performed with R.reduce after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n */\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/transpose.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n * If some of the rows are shorter than the following rows, their elements are skipped:\n *\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/traverse.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar sequence = __webpack_require__(\"../node_modules/ramda/src/sequence.js\");\n\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return sequence(of, map(f, traversable));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/trim.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/tryCatch.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _arity = __webpack_require__(\"../node_modules/ramda/src/internal/_arity.js\");\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/type.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unapply.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, R.unapply derives a variadic function from a function which\n * takes an array. R.unapply is the inverse of R.apply.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nmodule.exports = _curry1(function unapply(fn) {\n  return function() {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unary.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar nAry = __webpack_require__(\"../node_modules/ramda/src/nAry.js\");\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/uncurryN.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function() {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unfold.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/union.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar compose = __webpack_require__(\"../node_modules/ramda/src/compose.js\");\nvar uniq = __webpack_require__(\"../node_modules/ramda/src/uniq.js\");\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(compose(uniq, _concat));\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unionWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _concat = __webpack_require__(\"../node_modules/ramda/src/internal/_concat.js\");\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar uniqWith = __webpack_require__(\"../node_modules/ramda/src/uniqWith.js\");\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/uniq.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar identity = __webpack_require__(\"../node_modules/ramda/src/identity.js\");\nvar uniqBy = __webpack_require__(\"../node_modules/ramda/src/uniqBy.js\");\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. `R.equals` is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nmodule.exports = uniqBy(identity);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/uniqBy.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _Set = __webpack_require__(\"../node_modules/ramda/src/internal/_Set.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. `R.equals` is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/uniqWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _containsWith = __webpack_require__(\"../node_modules/ramda/src/internal/_containsWith.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unless.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      // coerceArray :: (a|[a]) -> [a]\n *      var coerceArray = R.unless(R.isArrayLike, R.of);\n *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n *      coerceArray(1);         //=> [1]\n */\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/unnest.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _identity = __webpack_require__(\"../node_modules/ramda/src/internal/_identity.js\");\nvar chain = __webpack_require__(\"../node_modules/ramda/src/chain.js\");\n\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nmodule.exports = chain(_identity);\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/until.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/update.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\nvar adjust = __webpack_require__(\"../node_modules/ramda/src/adjust.js\");\nvar always = __webpack_require__(\"../node_modules/ramda/src/always.js\");\n\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/useWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar curryN = __webpack_require__(\"../node_modules/ramda/src/curryN.js\");\n\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function() {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/values.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\nvar keys = __webpack_require__(\"../node_modules/ramda/src/keys.js\");\n\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/valuesIn.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry1 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry1.js\");\n\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/view.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nmodule.exports = (function() {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function(x) {\n    return {value: x, map: function() { return this; }};\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}());\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/when.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/where.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar _has = __webpack_require__(\"../node_modules/ramda/src/internal/_has.js\");\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as `filter` and `find`.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(__, 10),\n *        y: R.lt(__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/whereEq.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar equals = __webpack_require__(\"../node_modules/ramda/src/equals.js\");\nvar map = __webpack_require__(\"../node_modules/ramda/src/map.js\");\nvar where = __webpack_require__(\"../node_modules/ramda/src/where.js\");\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in `R.equals` terms) as accessing that property of the spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/without.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _contains = __webpack_require__(\"../node_modules/ramda/src/internal/_contains.js\");\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\nvar flip = __webpack_require__(\"../node_modules/ramda/src/flip.js\");\nvar reject = __webpack_require__(\"../node_modules/ramda/src/reject.js\");\n\n\n/**\n * Returns a new list without values in the first argument.\n * `R.equals` is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nmodule.exports = _curry2(function(xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/xprod.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/zip.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/zipObj.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry2 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry2.js\");\n\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\n\n\n/***/ }),\n\n/***/ \"../node_modules/ramda/src/zipWith.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curry3 = __webpack_require__(\"../node_modules/ramda/src/internal/_curry3.js\");\n\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\n\n\n/***/ }),\n\n/***/ \"./scripts/app.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _shuffle = __webpack_require__(\"./scripts/shuffle.js\");\n\nvar _shuffle2 = _interopRequireDefault(_shuffle);\n\nvar _dragAndDrop = __webpack_require__(\"./scripts/drag-and-drop.js\");\n\nvar _app = __webpack_require__(\"./styles/app.scss\");\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//DOM caching\nvar hexagons = Array.from(document.querySelectorAll('.c-puzzle__hexagon'));\nvar piecesContainer = document.querySelector('.c-pieces');\nvar pieces = Array.from(document.querySelectorAll('.c-pieces__piece'));\nvar start = document.getElementById('start');\nvar hint = document.getElementById('hint');\nvar reset = document.getElementById('reset');\nvar hardMode = document.getElementById('hard-mode');\nvar timer = document.getElementById('timer');\nvar solved = document.getElementById('solved');\nvar unsolved = document.getElementById('unsolved');\nvar startSound = document.getElementById('start-audio');\nvar failSound = document.getElementById('fail-audio');\nvar winSound = document.getElementById('win-audio');\nvar resetSound = document.getElementById('reset-audio');\n\nvar remainingTime = 300;\nvar timerIntervalID = void 0;\n\nvar updateTimer = function updateTimer(time) {\n  time > 60 ? timer.classList.remove('alert') : timer.classList.add('alert');\n  timer.innerHTML = ~~(time / 60) + ':' + (time % 60 < 10 ? '0' : '') + time % 60;\n};\n\nvar resetGame = function resetGame() {\n  unsolved.classList.remove('show');\n  piecesContainer.classList.remove('show');\n  hexagons.forEach(function (hexagon) {\n    return hexagon.classList.remove('finished');\n  });\n  pieces.forEach(function (piece) {\n    return piecesContainer.appendChild(piece);\n  });\n  remainingTime = hardMode.checked ? 180 : 300;\n  start.disabled = false;\n  hint.disabled = true;\n  reset.disabled = true;\n  hardMode.disabled = false;\n  solved.classList.add('show');\n  clearInterval(timerIntervalID);\n  updateTimer(remainingTime);\n};\n\nvar failed = function failed() {\n  failSound.play();\n  resetGame();\n};\n\nvar resetButton = function resetButton() {\n  resetSound.play();\n  resetGame();\n};\n\nvar win = function win() {\n  winSound.play();\n  hexagons.forEach(function (hexagon) {\n    return hexagon.classList.add('finished');\n  });\n  clearInterval(timerIntervalID);\n};\n\nvar timerInterval = function timerInterval() {\n  return remainingTime > 0 ? updateTimer(--remainingTime) : failed();\n};\n\nvar checkResolved = function checkResolved() {\n  var resolved = hexagons.every(function (hexagon) {\n    return hexagon.firstElementChild && hexagon.firstElementChild.getAttribute('data-piece') === hexagon.getAttribute('data-piece');\n  });\n  if (resolved) {\n    win();\n  }\n};\n\nvar dropAndCheck = function dropAndCheck(event) {\n  (0, _dragAndDrop.dropPiece)(event);\n  checkResolved();\n};\n\nvar solve = function solve() {\n  hexagons.forEach(function (hexagon) {\n    hexagon.appendChild(document.getElementById('piece'.concat(hexagon.getAttribute('data-piece'))));\n  });\n  checkResolved();\n};\n\nvar showHint = function showHint() {\n  return solved.classList.add('show');\n};\nvar hideHint = function hideHint() {\n  return solved.classList.remove('show');\n};\n\nvar startGame = function startGame(event) {\n  startSound.play();\n  (0, _shuffle2.default)(piecesContainer);\n  start.disabled = true;\n  if (!hardMode.checked) {\n    hint.disabled = false;\n  }\n  reset.disabled = false;\n  hardMode.disabled = true;\n  piecesContainer.classList.add('show');\n  solved.classList.remove('show');\n  unsolved.classList.add('show');\n  timerIntervalID = setInterval(timerInterval, 1000);\n};\n\nvar toggleHardMode = function toggleHardMode(event) {\n  remainingTime = event.target.checked ? 180 : 300;\n  updateTimer(remainingTime);\n};\n\nhexagons.forEach(function (hexagon) {\n  hexagon.addEventListener('drop', dropAndCheck);\n  hexagon.addEventListener('dragover', _dragAndDrop.dragOver);\n  hexagon.addEventListener('dragstart', _dragAndDrop.pickImage);\n});\n\npiecesContainer.addEventListener('drop', _dragAndDrop.dropPiece);\npiecesContainer.addEventListener('dragover', _dragAndDrop.dragOver);\n\npieces.forEach(function (piece) {\n  return piece.addEventListener('dragstart', _dragAndDrop.pickImage);\n});\n\nstart.addEventListener('click', startGame);\nreset.addEventListener('click', resetButton);\nhint.addEventListener('mousedown', showHint);\nhint.addEventListener('mouseup', hideHint);\nhardMode.addEventListener('change', toggleHardMode);\n\n// https://webpack.github.io/docs/hot-module-replacement.html\nif (false) {\n  module.hot.accept();\n}\n\n/***/ }),\n\n/***/ \"./scripts/drag-and-drop.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar dragOver = exports.dragOver = function dragOver(event) {\n  event.preventDefault();\n  event.dataTransfer.dropEffect = \"copy\";\n};\n\nvar dropPiece = exports.dropPiece = function dropPiece(event) {\n  event.preventDefault();\n  var destination = event.currentTarget;\n  var dataEmpty = destination.getAttribute('data-empty');\n\n  if (dataEmpty) {\n    destination.appendChild(document.getElementById(event.dataTransfer.getData(\"text/plain\")));\n    if (dataEmpty === 'true') {\n      destination.setAttribute('data-empty', '');\n    }\n    var origin = event.dataTransfer.getData(\"origin\");\n    if (origin) {\n      document.getElementById(origin).setAttribute('data-empty', 'true');\n    }\n  }\n};\n\nvar pickImage = exports.pickImage = function pickImage(event) {\n  event.dataTransfer.setData(\"text/plain\", event.target.id);\n  event.dataTransfer.dropEffect = \"copy\";\n  if (event.target.parentNode.classList.contains('c-puzzle__hexagon')) {\n    event.dataTransfer.setData(\"origin\", event.target.parentNode.id);\n  }\n};\n\n/***/ }),\n\n/***/ \"./scripts/shuffle.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ramda = __webpack_require__(\"../node_modules/ramda/index.js\");\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar compose = _ramda2.default.compose;\n\nvar getChildren = function getChildren(pieceContainer) {\n  return pieceContainer.children;\n};\n\nvar shuffleArray = function shuffleArray(array) {\n  return [].concat(_toConsumableArray(array)).sort(function (a, b) {\n    return 0.5 - Math.random();\n  });\n};\n\nvar relocateInDOM = function relocateInDOM(piece) {\n  return piece.parentNode.insertBefore(piece, null);\n};\n\nvar shufflePieces = compose(_ramda2.default.forEach(relocateInDOM), shuffleArray, Array.from, getChildren);\n\nexports.default = shufflePieces;\n\n/***/ }),\n\n/***/ \"./styles/app.scss\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// app.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./scripts/app.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4fe00437e7999a56e1fa","module.exports = {\n  F: require('./src/F'),\n  T: require('./src/T'),\n  __: require('./src/__'),\n  add: require('./src/add'),\n  addIndex: require('./src/addIndex'),\n  adjust: require('./src/adjust'),\n  all: require('./src/all'),\n  allPass: require('./src/allPass'),\n  always: require('./src/always'),\n  and: require('./src/and'),\n  any: require('./src/any'),\n  anyPass: require('./src/anyPass'),\n  ap: require('./src/ap'),\n  aperture: require('./src/aperture'),\n  append: require('./src/append'),\n  apply: require('./src/apply'),\n  applySpec: require('./src/applySpec'),\n  ascend: require('./src/ascend'),\n  assoc: require('./src/assoc'),\n  assocPath: require('./src/assocPath'),\n  binary: require('./src/binary'),\n  bind: require('./src/bind'),\n  both: require('./src/both'),\n  call: require('./src/call'),\n  chain: require('./src/chain'),\n  clamp: require('./src/clamp'),\n  clone: require('./src/clone'),\n  comparator: require('./src/comparator'),\n  complement: require('./src/complement'),\n  compose: require('./src/compose'),\n  composeK: require('./src/composeK'),\n  composeP: require('./src/composeP'),\n  concat: require('./src/concat'),\n  cond: require('./src/cond'),\n  construct: require('./src/construct'),\n  constructN: require('./src/constructN'),\n  contains: require('./src/contains'),\n  converge: require('./src/converge'),\n  countBy: require('./src/countBy'),\n  curry: require('./src/curry'),\n  curryN: require('./src/curryN'),\n  dec: require('./src/dec'),\n  descend: require('./src/descend'),\n  defaultTo: require('./src/defaultTo'),\n  difference: require('./src/difference'),\n  differenceWith: require('./src/differenceWith'),\n  dissoc: require('./src/dissoc'),\n  dissocPath: require('./src/dissocPath'),\n  divide: require('./src/divide'),\n  drop: require('./src/drop'),\n  dropLast: require('./src/dropLast'),\n  dropLastWhile: require('./src/dropLastWhile'),\n  dropRepeats: require('./src/dropRepeats'),\n  dropRepeatsWith: require('./src/dropRepeatsWith'),\n  dropWhile: require('./src/dropWhile'),\n  either: require('./src/either'),\n  empty: require('./src/empty'),\n  eqBy: require('./src/eqBy'),\n  eqProps: require('./src/eqProps'),\n  equals: require('./src/equals'),\n  evolve: require('./src/evolve'),\n  filter: require('./src/filter'),\n  find: require('./src/find'),\n  findIndex: require('./src/findIndex'),\n  findLast: require('./src/findLast'),\n  findLastIndex: require('./src/findLastIndex'),\n  flatten: require('./src/flatten'),\n  flip: require('./src/flip'),\n  forEach: require('./src/forEach'),\n  forEachObjIndexed: require('./src/forEachObjIndexed'),\n  fromPairs: require('./src/fromPairs'),\n  groupBy: require('./src/groupBy'),\n  groupWith: require('./src/groupWith'),\n  gt: require('./src/gt'),\n  gte: require('./src/gte'),\n  has: require('./src/has'),\n  hasIn: require('./src/hasIn'),\n  head: require('./src/head'),\n  identical: require('./src/identical'),\n  identity: require('./src/identity'),\n  ifElse: require('./src/ifElse'),\n  inc: require('./src/inc'),\n  indexBy: require('./src/indexBy'),\n  indexOf: require('./src/indexOf'),\n  init: require('./src/init'),\n  insert: require('./src/insert'),\n  insertAll: require('./src/insertAll'),\n  intersection: require('./src/intersection'),\n  intersectionWith: require('./src/intersectionWith'),\n  intersperse: require('./src/intersperse'),\n  into: require('./src/into'),\n  invert: require('./src/invert'),\n  invertObj: require('./src/invertObj'),\n  invoker: require('./src/invoker'),\n  is: require('./src/is'),\n  isArrayLike: require('./src/isArrayLike'),\n  isEmpty: require('./src/isEmpty'),\n  isNil: require('./src/isNil'),\n  join: require('./src/join'),\n  juxt: require('./src/juxt'),\n  keys: require('./src/keys'),\n  keysIn: require('./src/keysIn'),\n  last: require('./src/last'),\n  lastIndexOf: require('./src/lastIndexOf'),\n  length: require('./src/length'),\n  lens: require('./src/lens'),\n  lensIndex: require('./src/lensIndex'),\n  lensPath: require('./src/lensPath'),\n  lensProp: require('./src/lensProp'),\n  lift: require('./src/lift'),\n  liftN: require('./src/liftN'),\n  lt: require('./src/lt'),\n  lte: require('./src/lte'),\n  map: require('./src/map'),\n  mapAccum: require('./src/mapAccum'),\n  mapAccumRight: require('./src/mapAccumRight'),\n  mapObjIndexed: require('./src/mapObjIndexed'),\n  match: require('./src/match'),\n  mathMod: require('./src/mathMod'),\n  max: require('./src/max'),\n  maxBy: require('./src/maxBy'),\n  mean: require('./src/mean'),\n  median: require('./src/median'),\n  memoize: require('./src/memoize'),\n  merge: require('./src/merge'),\n  mergeAll: require('./src/mergeAll'),\n  mergeWith: require('./src/mergeWith'),\n  mergeWithKey: require('./src/mergeWithKey'),\n  min: require('./src/min'),\n  minBy: require('./src/minBy'),\n  modulo: require('./src/modulo'),\n  multiply: require('./src/multiply'),\n  nAry: require('./src/nAry'),\n  negate: require('./src/negate'),\n  none: require('./src/none'),\n  not: require('./src/not'),\n  nth: require('./src/nth'),\n  nthArg: require('./src/nthArg'),\n  objOf: require('./src/objOf'),\n  of: require('./src/of'),\n  omit: require('./src/omit'),\n  once: require('./src/once'),\n  or: require('./src/or'),\n  over: require('./src/over'),\n  pair: require('./src/pair'),\n  partial: require('./src/partial'),\n  partialRight: require('./src/partialRight'),\n  partition: require('./src/partition'),\n  path: require('./src/path'),\n  pathEq: require('./src/pathEq'),\n  pathOr: require('./src/pathOr'),\n  pathSatisfies: require('./src/pathSatisfies'),\n  pick: require('./src/pick'),\n  pickAll: require('./src/pickAll'),\n  pickBy: require('./src/pickBy'),\n  pipe: require('./src/pipe'),\n  pipeK: require('./src/pipeK'),\n  pipeP: require('./src/pipeP'),\n  pluck: require('./src/pluck'),\n  prepend: require('./src/prepend'),\n  product: require('./src/product'),\n  project: require('./src/project'),\n  prop: require('./src/prop'),\n  propEq: require('./src/propEq'),\n  propIs: require('./src/propIs'),\n  propOr: require('./src/propOr'),\n  propSatisfies: require('./src/propSatisfies'),\n  props: require('./src/props'),\n  range: require('./src/range'),\n  reduce: require('./src/reduce'),\n  reduceBy: require('./src/reduceBy'),\n  reduceRight: require('./src/reduceRight'),\n  reduceWhile: require('./src/reduceWhile'),\n  reduced: require('./src/reduced'),\n  reject: require('./src/reject'),\n  remove: require('./src/remove'),\n  repeat: require('./src/repeat'),\n  replace: require('./src/replace'),\n  reverse: require('./src/reverse'),\n  scan: require('./src/scan'),\n  sequence: require('./src/sequence'),\n  set: require('./src/set'),\n  slice: require('./src/slice'),\n  sort: require('./src/sort'),\n  sortBy: require('./src/sortBy'),\n  sortWith: require('./src/sortWith'),\n  split: require('./src/split'),\n  splitAt: require('./src/splitAt'),\n  splitEvery: require('./src/splitEvery'),\n  splitWhen: require('./src/splitWhen'),\n  subtract: require('./src/subtract'),\n  sum: require('./src/sum'),\n  symmetricDifference: require('./src/symmetricDifference'),\n  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),\n  tail: require('./src/tail'),\n  take: require('./src/take'),\n  takeLast: require('./src/takeLast'),\n  takeLastWhile: require('./src/takeLastWhile'),\n  takeWhile: require('./src/takeWhile'),\n  tap: require('./src/tap'),\n  test: require('./src/test'),\n  times: require('./src/times'),\n  toLower: require('./src/toLower'),\n  toPairs: require('./src/toPairs'),\n  toPairsIn: require('./src/toPairsIn'),\n  toString: require('./src/toString'),\n  toUpper: require('./src/toUpper'),\n  transduce: require('./src/transduce'),\n  transpose: require('./src/transpose'),\n  traverse: require('./src/traverse'),\n  trim: require('./src/trim'),\n  tryCatch: require('./src/tryCatch'),\n  type: require('./src/type'),\n  unapply: require('./src/unapply'),\n  unary: require('./src/unary'),\n  uncurryN: require('./src/uncurryN'),\n  unfold: require('./src/unfold'),\n  union: require('./src/union'),\n  unionWith: require('./src/unionWith'),\n  uniq: require('./src/uniq'),\n  uniqBy: require('./src/uniqBy'),\n  uniqWith: require('./src/uniqWith'),\n  unless: require('./src/unless'),\n  unnest: require('./src/unnest'),\n  until: require('./src/until'),\n  update: require('./src/update'),\n  useWith: require('./src/useWith'),\n  values: require('./src/values'),\n  valuesIn: require('./src/valuesIn'),\n  view: require('./src/view'),\n  when: require('./src/when'),\n  where: require('./src/where'),\n  whereEq: require('./src/whereEq'),\n  without: require('./src/without'),\n  xprod: require('./src/xprod'),\n  zip: require('./src/zip'),\n  zipObj: require('./src/zipObj'),\n  zipWith: require('./src/zipWith')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/index.js\n// module id = ../node_modules/ramda/index.js\n// module chunks = 0","var always = require('./always');\n\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nmodule.exports = always(false);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/F.js\n// module id = ../node_modules/ramda/src/F.js\n// module chunks = 0","var always = require('./always');\n\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nmodule.exports = always(true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/T.js\n// module id = ../node_modules/ramda/src/T.js\n// module chunks = 0","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/__.js\n// module id = ../node_modules/ramda/src/__.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/add.js\n// module id = ../node_modules/ramda/src/add.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, Ramda's simple `map` function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/addIndex.js\n// module id = ../node_modules/ramda/src/addIndex.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/adjust.js\n// module id = ../node_modules/ramda/src/adjust.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xall = require('./internal/_xall');\n\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/all.js\n// module id = ../node_modules/ramda/src/all.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/allPass.js\n// module id = ../node_modules/ramda/src/allPass.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/always.js\n// module id = ../node_modules/ramda/src/always.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/and.js\n// module id = ../node_modules/ramda/src/and.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\n\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/any.js\n// module id = ../node_modules/ramda/src/any.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/anyPass.js\n// module id = ../node_modules/ramda/src/anyPass.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar map = require('./map');\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {Array} fns An array of functions\n * @param {Array} vs An array of values\n * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applicative, fn) {\n  return (\n    typeof applicative.ap === 'function' ?\n      applicative.ap(fn) :\n    typeof applicative === 'function' ?\n      function(x) { return applicative(x)(fn(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, fn)); }, [], applicative)\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/ap.js\n// module id = ../node_modules/ramda/src/ap.js\n// module chunks = 0","var _aperture = require('./internal/_aperture');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xaperture = require('./internal/_xaperture');\n\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/aperture.js\n// module id = ../node_modules/ramda/src/aperture.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/append.js\n// module id = ../node_modules/ramda/src/append.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/apply.js\n// module id = ../node_modules/ramda/src/apply.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar apply = require('./apply');\nvar curryN = require('./curryN');\nvar map = require('./map');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\nvar values = require('./values');\n\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n             spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))),\n                function() {\n                  var args = arguments;\n                  return map(function(f) { return apply(f, args); }, spec);\n                });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/applySpec.js\n// module id = ../node_modules/ramda/src/applySpec.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/ascend.js\n// module id = ../node_modules/ramda/src/ascend.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/assoc.js\n// module id = ../node_modules/ramda/src/assoc.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\nvar _isArray = require('./internal/_isArray');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/assocPath.js\n// module id = ../node_modules/ramda/src/assocPath.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/binary.js\n// module id = ../node_modules/ramda/src/binary.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/bind.js\n// module id = ../node_modules/ramda/src/bind.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar and = require('./and');\nvar lift = require('./lift');\n\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ?\n    function _both() {\n      return f.apply(this, arguments) && g.apply(this, arguments);\n    } :\n    lift(and)(f, g);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/both.js\n// module id = ../node_modules/ramda/src/both.js\n// module chunks = 0","var curry = require('./curry');\n\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * `R.converge`: the left branch can produce a function while the right branch\n * produces a value to be passed to that function as an argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/call.js\n// module id = ../node_modules/ramda/src/call.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _makeFlat = require('./internal/_makeFlat');\nvar _xchain = require('./internal/_xchain');\nvar map = require('./map');\n\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nmodule.exports = _curry2(_dispatchable(['chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function(x) { return fn(monad(x))(x); };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/chain.js\n// module id = ../node_modules/ramda/src/chain.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min :\n         value > max ? max :\n         value;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/clamp.js\n// module id = ../node_modules/ramda/src/clamp.js\n// module chunks = 0","var _clone = require('./internal/_clone');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/clone.js\n// module id = ../node_modules/ramda/src/clone.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nmodule.exports = _curry1(function comparator(pred) {\n  return function(a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/comparator.js\n// module id = ../node_modules/ramda/src/comparator.js\n// module chunks = 0","var lift = require('./lift');\nvar not = require('./not');\n\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nmodule.exports = lift(not);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/complement.js\n// module id = ../node_modules/ramda/src/complement.js\n// module chunks = 0","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/compose.js\n// module id = ../node_modules/ramda/src/compose.js\n// module chunks = 0","var chain = require('./chain');\nvar compose = require('./compose');\nvar map = require('./map');\n\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/composeK.js\n// module id = ../node_modules/ramda/src/composeK.js\n// module chunks = 0","var pipeP = require('./pipeP');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/composeP.js\n// module id = ../node_modules/ramda/src/composeP.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar _isFunction = require('./internal/_isFunction');\nvar toString = require('./toString');\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (a == null || !_isFunction(a.concat)) {\n    throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n  }\n  if (_isArray(a) && !_isArray(b)) {\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  return a.concat(b);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/concat.js\n// module id = ../node_modules/ramda/src/concat.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar map = require('./map');\nvar max = require('./max');\nvar reduce = require('./reduce');\n\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max,\n                     0,\n                     map(function(pair) { return pair[0].length; }, pairs));\n  return _arity(arity, function() {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/cond.js\n// module id = ../node_modules/ramda/src/cond.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar constructN = require('./constructN');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/construct.js\n// module id = ../node_modules/ramda/src/construct.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/constructN.js\n// module id = ../node_modules/ramda/src/constructN.js\n// module chunks = 0","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n * least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/contains.js\n// module id = ../node_modules/ramda/src/contains.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _map = require('./internal/_map');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/converge.js\n// module id = ../node_modules/ramda/src/converge.js\n// module chunks = 0","var reduceBy = require('./reduceBy');\n\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/countBy.js\n// module id = ../node_modules/ramda/src/countBy.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/curry.js\n// module id = ../node_modules/ramda/src/curry.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/curryN.js\n// module id = ../node_modules/ramda/src/curryN.js\n// module chunks = 0","var add = require('./add');\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dec.js\n// module id = ../node_modules/ramda/src/dec.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/defaultTo.js\n// module id = ../node_modules/ramda/src/defaultTo.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/descend.js\n// module id = ../node_modules/ramda/src/descend.js\n// module chunks = 0","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared are compared\n * in terms of value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/difference.js\n// module id = ../node_modules/ramda/src/difference.js\n// module chunks = 0","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) &&\n        !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/differenceWith.js\n// module id = ../node_modules/ramda/src/differenceWith.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dissoc.js\n// module id = ../node_modules/ramda/src/dissoc.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar assoc = require('./assoc');\nvar dissoc = require('./dissoc');\n\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @sig [String] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dissocPath.js\n// module id = ../node_modules/ramda/src/dissocPath.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nmodule.exports = _curry2(function divide(a, b) { return a / b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/divide.js\n// module id = ../node_modules/ramda/src/divide.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdrop = require('./internal/_xdrop');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {[a]} list\n * @return {[a]} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/drop.js\n// module id = ../node_modules/ramda/src/drop.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLast = require('./internal/_dropLast');\nvar _xdropLast = require('./internal/_xdropLast');\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dropLast.js\n// module id = ../node_modules/ramda/src/dropLast.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLastWhile = require('./internal/_dropLastWhile');\nvar _xdropLastWhile = require('./internal/_xdropLastWhile');\n\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dropLastWhile.js\n// module id = ../node_modules/ramda/src/dropLastWhile.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar dropRepeatsWith = require('./dropRepeatsWith');\nvar equals = require('./equals');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. `R.equals`\n * is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dropRepeats.js\n// module id = ../node_modules/ramda/src/dropRepeats.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar last = require('./last');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dropRepeatsWith.js\n// module id = ../node_modules/ramda/src/dropRepeatsWith.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropWhile = require('./internal/_xdropWhile');\n\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, idx);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/dropWhile.js\n// module id = ../node_modules/ramda/src/dropWhile.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar lift = require('./lift');\nvar or = require('./or');\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/either.js\n// module id = ../node_modules/ramda/src/either.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/empty.js\n// module id = ../node_modules/ramda/src/empty.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/eqBy.js\n// module id = ../node_modules/ramda/src/eqBy.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Reports whether two objects have the same value, in `R.equals` terms, for\n * the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/eqProps.js\n// module id = ../node_modules/ramda/src/eqProps.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _equals = require('./internal/_equals');\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/equals.js\n// module id = ../node_modules/ramda/src/equals.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/evolve.js\n// module id = ../node_modules/ramda/src/evolve.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a \"filterable\", and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/filter.js\n// module id = ../node_modules/ramda/src/filter.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfind = require('./internal/_xfind');\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/find.js\n// module id = ../node_modules/ramda/src/find.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindIndex = require('./internal/_xfindIndex');\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/findIndex.js\n// module id = ../node_modules/ramda/src/findIndex.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLast = require('./internal/_xfindLast');\n\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/findLast.js\n// module id = ../node_modules/ramda/src/findLast.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLastIndex = require('./internal/_xfindLastIndex');\n\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/findLastIndex.js\n// module id = ../node_modules/ramda/src/findLastIndex.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _makeFlat = require('./internal/_makeFlat');\n\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nmodule.exports = _curry1(_makeFlat(true));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/flatten.js\n// module id = ../node_modules/ramda/src/flatten.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar curry = require('./curry');\n\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function(a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/flip.js\n// module id = ../node_modules/ramda/src/flip.js\n// module chunks = 0","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/forEach.js\n// module id = ../node_modules/ramda/src/forEach.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar keys = require('./keys');\n\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/forEachObjIndexed.js\n// module id = ../node_modules/ramda/src/forEachObjIndexed.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/fromPairs.js\n// module id = ../node_modules/ramda/src/fromPairs.js\n// module chunks = 0","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\nvar reduceBy = require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/groupBy.js\n// module id = ../node_modules/ramda/src/groupBy.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all \"equal\" according to the provided equality function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of equal elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nmodule.exports = _curry2(function(fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[idx], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/groupWith.js\n// module id = ../node_modules/ramda/src/groupWith.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/gt.js\n// module id = ../node_modules/ramda/src/gt.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/gte.js\n// module id = ../node_modules/ramda/src/gte.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nmodule.exports = _curry2(_has);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/has.js\n// module id = ../node_modules/ramda/src/has.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/hasIn.js\n// module id = ../node_modules/ramda/src/hasIn.js\n// module chunks = 0","var nth = require('./nth');\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/head.js\n// module id = ../node_modules/ramda/src/head.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/identical.js\n// module id = ../node_modules/ramda/src/identical.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _identity = require('./internal/_identity');\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/identity.js\n// module id = ../node_modules/ramda/src/identity.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/ifElse.js\n// module id = ../node_modules/ramda/src/ifElse.js\n// module chunks = 0","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/inc.js\n// module id = ../node_modules/ramda/src/inc.js\n// module chunks = 0","var reduceBy = require('./reduceBy');\n\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/indexBy.js\n// module id = ../node_modules/ramda/src/indexBy.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _indexOf = require('./internal/_indexOf');\nvar _isArray = require('./internal/_isArray');\n\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. `R.equals` is used to determine\n * equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n    xs.indexOf(target) :\n    _indexOf(xs, target, 0);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/indexOf.js\n// module id = ../node_modules/ramda/src/indexOf.js\n// module chunks = 0","var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/init.js\n// module id = ../node_modules/ramda/src/init.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the supplied element into the list, at index `index`. _Note that\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/insert.js\n// module id = ../node_modules/ramda/src/insert.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the sub-list into the list, at index `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx),\n                   elts,\n                   Array.prototype.slice.call(list, idx));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/insertAll.js\n// module id = ../node_modules/ramda/src/insertAll.js\n// module chunks = 0","var _contains = require('./_contains');\n\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = (function() {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function(item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function(item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n            return false;\n          }\n        }\n        // these types can all utilise the native Set\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n            return false;\n          }\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n            return false;\n          }\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n            return false;\n          }\n          return true;\n        }\n      /* falls through */\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        // scan through all previously applied items\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n    }\n  }\n  return _Set;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_Set.js\n// module id = ../node_modules/ramda/src/internal/_Set.js\n// module chunks = 0","module.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_aperture.js\n// module id = ../node_modules/ramda/src/internal/_aperture.js\n// module chunks = 0","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_arity.js\n// module id = ../node_modules/ramda/src/internal/_arity.js\n// module chunks = 0","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_arrayFromIterator.js\n// module id = ../node_modules/ramda/src/internal/_arrayFromIterator.js\n// module chunks = 0","var _objectAssign = require('./_objectAssign');\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_assign.js\n// module id = ../node_modules/ramda/src/internal/_assign.js\n// module chunks = 0","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_checkForMethod.js\n// module id = ../node_modules/ramda/src/internal/_checkForMethod.js\n// module chunks = 0","var _cloneRegExp = require('./_cloneRegExp');\nvar type = require('../type');\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_clone.js\n// module id = ../node_modules/ramda/src/internal/_clone.js\n// module chunks = 0","module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_cloneRegExp.js\n// module id = ../node_modules/ramda/src/internal/_cloneRegExp.js\n// module chunks = 0","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_complement.js\n// module id = ../node_modules/ramda/src/internal/_complement.js\n// module chunks = 0","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_concat.js\n// module id = ../node_modules/ramda/src/internal/_concat.js\n// module chunks = 0","var _indexOf = require('./_indexOf');\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_contains.js\n// module id = ../node_modules/ramda/src/internal/_contains.js\n// module chunks = 0","module.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_containsWith.js\n// module id = ../node_modules/ramda/src/internal/_containsWith.js\n// module chunks = 0","var _arity = require('./_arity');\nvar _curry2 = require('./_curry2');\n\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function(fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function() {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_createPartialApplicator.js\n// module id = ../node_modules/ramda/src/internal/_createPartialApplicator.js\n// module chunks = 0","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_curry1.js\n// module id = ../node_modules/ramda/src/internal/_curry1.js\n// module chunks = 0","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_curry2.js\n// module id = ../node_modules/ramda/src/internal/_curry2.js\n// module chunks = 0","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_curry3.js\n// module id = ../node_modules/ramda/src/internal/_curry3.js\n// module chunks = 0","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_curryN.js\n// module id = ../node_modules/ramda/src/internal/_curryN.js\n// module chunks = 0","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_dispatchable.js\n// module id = ../node_modules/ramda/src/internal/_dispatchable.js\n// module chunks = 0","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_dropLast.js\n// module id = ../node_modules/ramda/src/internal/_dropLast.js\n// module chunks = 0","module.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_dropLastWhile.js\n// module id = ../node_modules/ramda/src/internal/_dropLastWhile.js\n// module chunks = 0","var _arrayFromIterator = require('./_arrayFromIterator');\nvar _functionName = require('./_functionName');\nvar _has = require('./_has');\nvar identical = require('../identical');\nvar keys = require('../keys');\nvar type = require('../type');\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_equals.js\n// module id = ../node_modules/ramda/src/internal/_equals.js\n// module chunks = 0","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_filter.js\n// module id = ../node_modules/ramda/src/internal/_filter.js\n// module chunks = 0","var _forceReduced = require('./_forceReduced');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\nvar isArrayLike = require('../isArrayLike');\n\nmodule.exports = (function() {\n  var preservingReduced = function(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_flatCat.js\n// module id = ../node_modules/ramda/src/internal/_flatCat.js\n// module chunks = 0","module.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_forceReduced.js\n// module id = ../node_modules/ramda/src/internal/_forceReduced.js\n// module chunks = 0","module.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_functionName.js\n// module id = ../node_modules/ramda/src/internal/_functionName.js\n// module chunks = 0","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_has.js\n// module id = ../node_modules/ramda/src/internal/_has.js\n// module chunks = 0","module.exports = function _identity(x) { return x; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_identity.js\n// module id = ../node_modules/ramda/src/internal/_identity.js\n// module chunks = 0","var equals = require('../equals');\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_indexOf.js\n// module id = ../node_modules/ramda/src/internal/_indexOf.js\n// module chunks = 0","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isArguments.js\n// module id = ../node_modules/ramda/src/internal/_isArguments.js\n// module chunks = 0","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isArray.js\n// module id = ../node_modules/ramda/src/internal/_isArray.js\n// module chunks = 0","module.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isFunction.js\n// module id = ../node_modules/ramda/src/internal/_isFunction.js\n// module chunks = 0","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return (n << 0) === n;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isInteger.js\n// module id = ../node_modules/ramda/src/internal/_isInteger.js\n// module chunks = 0","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isNumber.js\n// module id = ../node_modules/ramda/src/internal/_isNumber.js\n// module chunks = 0","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isObject.js\n// module id = ../node_modules/ramda/src/internal/_isObject.js\n// module chunks = 0","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isPlaceholder.js\n// module id = ../node_modules/ramda/src/internal/_isPlaceholder.js\n// module chunks = 0","module.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isRegExp.js\n// module id = ../node_modules/ramda/src/internal/_isRegExp.js\n// module chunks = 0","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isString.js\n// module id = ../node_modules/ramda/src/internal/_isString.js\n// module chunks = 0","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_isTransformer.js\n// module id = ../node_modules/ramda/src/internal/_isTransformer.js\n// module chunks = 0","var isArrayLike = require('../isArrayLike');\n\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_makeFlat.js\n// module id = ../node_modules/ramda/src/internal/_makeFlat.js\n// module chunks = 0","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_map.js\n// module id = ../node_modules/ramda/src/internal/_map.js\n// module chunks = 0","var _has = require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_objectAssign.js\n// module id = ../node_modules/ramda/src/internal/_objectAssign.js\n// module chunks = 0","module.exports = function _of(x) { return [x]; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_of.js\n// module id = ../node_modules/ramda/src/internal/_of.js\n// module chunks = 0","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_pipe.js\n// module id = ../node_modules/ramda/src/internal/_pipe.js\n// module chunks = 0","module.exports = function _pipeP(f, g) {\n  return function() {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function(x) {\n      return g.call(ctx, x);\n    });\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_pipeP.js\n// module id = ../node_modules/ramda/src/internal/_pipeP.js\n// module chunks = 0","module.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_quote.js\n// module id = ../node_modules/ramda/src/internal/_quote.js\n// module chunks = 0","var _xwrap = require('./_xwrap');\nvar bind = require('../bind');\nvar isArrayLike = require('../isArrayLike');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj) {\n    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list);\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_reduce.js\n// module id = ../node_modules/ramda/src/internal/_reduce.js\n// module chunks = 0","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_reduced.js\n// module id = ../node_modules/ramda/src/internal/_reduced.js\n// module chunks = 0","var _assign = require('./_assign');\nvar _identity = require('./_identity');\nvar _isTransformer = require('./_isTransformer');\nvar isArrayLike = require('../isArrayLike');\nvar objOf = require('../objOf');\n\n\nmodule.exports = (function() {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function(a, b) { return a + b; },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function(result, input) {\n      return _assign(\n        result,\n        isArrayLike(input) ? objOf(input[0], input[1]) : input\n      );\n    },\n    '@@transducer/result': _identity\n  };\n\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n    if (isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_stepCat.js\n// module id = ../node_modules/ramda/src/internal/_stepCat.js\n// module chunks = 0","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_toISOString.js\n// module id = ../node_modules/ramda/src/internal/_toISOString.js\n// module chunks = 0","var _contains = require('./_contains');\nvar _map = require('./_map');\nvar _quote = require('./_quote');\nvar _toISOString = require('./_toISOString');\nvar keys = require('../keys');\nvar reject = require('../reject');\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_toString.js\n// module id = ../node_modules/ramda/src/internal/_toString.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function(result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function(result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xall.js\n// module id = ../node_modules/ramda/src/internal/_xall.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function(result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xany.js\n// module id = ../node_modules/ramda/src/internal/_xany.js\n// module chunks = 0","var _concat = require('./_concat');\nvar _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xaperture.js\n// module id = ../node_modules/ramda/src/internal/_xaperture.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _flatCat = require('./_flatCat');\nvar map = require('../map');\n\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xchain.js\n// module id = ../node_modules/ramda/src/internal/_xchain.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xdrop.js\n// module id = ../node_modules/ramda/src/internal/_xdrop.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xdropLast.js\n// module id = ../node_modules/ramda/src/internal/_xdropLast.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.retain(result, input)\n                         : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function(result, input) {\n    result = _reduce(\n      this.xf['@@transducer/step'],\n      result,\n      this.retained\n    );\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function(result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xdropLastWhile.js\n// module id = ../node_modules/ramda/src/internal/_xdropLastWhile.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xdropRepeatsWith.js\n// module id = ../node_modules/ramda/src/internal/_xdropRepeatsWith.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xdropWhile.js\n// module id = ../node_modules/ramda/src/internal/_xdropWhile.js\n// module chunks = 0","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfBase.js\n// module id = ../node_modules/ramda/src/internal/_xfBase.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfilter.js\n// module id = ../node_modules/ramda/src/internal/_xfilter.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfind.js\n// module id = ../node_modules/ramda/src/internal/_xfind.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfindIndex.js\n// module id = ../node_modules/ramda/src/internal/_xfindIndex.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfindLast.js\n// module id = ../node_modules/ramda/src/internal/_xfindLast.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xfindLastIndex.js\n// module id = ../node_modules/ramda/src/internal/_xfindLastIndex.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xmap.js\n// module id = ../node_modules/ramda/src/internal/_xmap.js\n// module chunks = 0","var _curryN = require('./_curryN');\nvar _has = require('./_has');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function(result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [],\n                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n                 });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xreduceBy.js\n// module id = ../node_modules/ramda/src/internal/_xreduceBy.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xtake.js\n// module id = ../node_modules/ramda/src/internal/_xtake.js\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xtakeWhile.js\n// module id = ../node_modules/ramda/src/internal/_xtakeWhile.js\n// module chunks = 0","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/internal/_xwrap.js\n// module id = ../node_modules/ramda/src/internal/_xwrap.js\n// module chunks = 0","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar _filter = require('./internal/_filter');\nvar flip = require('./flip');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.intersectionWith\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/intersection.js\n// module id = ../node_modules/ramda/src/intersection.js\n// module chunks = 0","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.intersection\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  var results = [];\n  var idx = 0;\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n    idx += 1;\n  }\n  return uniqWith(pred, results);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/intersectionWith.js\n// module id = ../node_modules/ramda/src/intersectionWith.js\n// module chunks = 0","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/intersperse.js\n// module id = ../node_modules/ramda/src/intersperse.js\n// module chunks = 0","var _clone = require('./internal/_clone');\nvar _curry3 = require('./internal/_curry3');\nvar _isTransformer = require('./internal/_isTransformer');\nvar _reduce = require('./internal/_reduce');\nvar _stepCat = require('./internal/_stepCat');\n\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with R.reduce after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ?\n    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/into.js\n// module id = ../node_modules/ramda/src/into.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar keys = require('./keys');\n\n\n/**\n * Same as R.invertObj, however this accounts for objects with duplicate values\n * by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys\n * in an array.\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : (out[val] = []);\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/invert.js\n// module id = ../node_modules/ramda/src/invert.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/invertObj.js\n// module id = ../node_modules/ramda/src/invertObj.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar curryN = require('./curryN');\nvar toString = require('./toString');\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/invoker.js\n// module id = ../node_modules/ramda/src/invoker.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/is.js\n// module id = ../node_modules/ramda/src/is.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _isArray = require('./internal/_isArray');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @deprecated since v0.23.0\n * @example\n *\n *      R.isArrayLike([]); //=> true\n *      R.isArrayLike(true); //=> false\n *      R.isArrayLike({}); //=> false\n *      R.isArrayLike({length: 10}); //=> false\n *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/isArrayLike.js\n// module id = ../node_modules/ramda/src/isArrayLike.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar empty = require('./empty');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/isEmpty.js\n// module id = ../node_modules/ramda/src/isEmpty.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nmodule.exports = _curry1(function isNil(x) { return x == null; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/isNil.js\n// module id = ../node_modules/ramda/src/isNil.js\n// module chunks = 0","var invoker = require('./invoker');\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/join.js\n// module id = ../node_modules/ramda/src/join.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar converge = require('./converge');\n\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/juxt.js\n// module id = ../node_modules/ramda/src/juxt.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/keys.js\n// module id = ../node_modules/ramda/src/keys.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/keysIn.js\n// module id = ../node_modules/ramda/src/keysIn.js\n// module chunks = 0","var nth = require('./nth');\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/last.js\n// module id = ../node_modules/ramda/src/last.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar equals = require('./equals');\n\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. `R.equals` is used to determine\n * equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lastIndexOf.js\n// module id = ../node_modules/ramda/src/lastIndexOf.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/length.js\n// module id = ../node_modules/ramda/src/length.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lens.js\n// module id = ../node_modules/ramda/src/lens.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar lens = require('./lens');\nvar nth = require('./nth');\nvar update = require('./update');\n\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lensIndex.js\n// module id = ../node_modules/ramda/src/lensIndex.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar assocPath = require('./assocPath');\nvar lens = require('./lens');\nvar path = require('./path');\n\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lensPath.js\n// module id = ../node_modules/ramda/src/lensPath.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar assoc = require('./assoc');\nvar lens = require('./lens');\nvar prop = require('./prop');\n\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lensProp.js\n// module id = ../node_modules/ramda/src/lensProp.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar liftN = require('./liftN');\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lift.js\n// module id = ../node_modules/ramda/src/lift.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar ap = require('./ap');\nvar curryN = require('./curryN');\nvar map = require('./map');\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/liftN.js\n// module id = ../node_modules/ramda/src/liftN.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lt(a, b) { return a < b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lt.js\n// module id = ../node_modules/ramda/src/lt.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/lte.js\n// module id = ../node_modules/ramda/src/lte.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/map.js\n// module id = ../node_modules/ramda/src/map.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The mapAccum function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mapAccum.js\n// module id = ../node_modules/ramda/src/mapAccum.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The mapAccumRight function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to `mapAccum`, except moves through the input list from the right to\n * the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mapAccumRight.js\n// module id = ../node_modules/ramda/src/mapAccumRight.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar keys = require('./keys');\n\n\n/**\n * An Object-specific version of `map`. The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * `map` instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function(acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mapObjIndexed.js\n// module id = ../node_modules/ramda/src/mapObjIndexed.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/match.js\n// module id = ../node_modules/ramda/src/match.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\n\n\n/**\n * mathMod behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n * when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) { return NaN; }\n  if (!_isInteger(p) || p < 1) { return NaN; }\n  return ((m % p) + p) % p;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mathMod.js\n// module id = ../node_modules/ramda/src/mathMod.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/max.js\n// module id = ../node_modules/ramda/src/max.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/maxBy.js\n// module id = ../node_modules/ramda/src/maxBy.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar sum = require('./sum');\n\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mean.js\n// module id = ../node_modules/ramda/src/mean.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar mean = require('./mean');\n\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/median.js\n// module id = ../node_modules/ramda/src/median.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar toString = require('./toString');\n\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      var count = 0;\n *      var factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = _curry1(function memoize(fn) {\n  var cache = {};\n  return _arity(fn.length, function() {\n    var key = toString(arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/memoize.js\n// module id = ../node_modules/ramda/src/memoize.js\n// module chunks = 0","var _assign = require('./internal/_assign');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/merge.js\n// module id = ../node_modules/ramda/src/merge.js\n// module chunks = 0","var _assign = require('./internal/_assign');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mergeAll.js\n// module id = ../node_modules/ramda/src/mergeAll.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object. The key will be\n * excluded from the returned object if the resulting value is `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function(_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mergeWith.js\n// module id = ../node_modules/ramda/src/mergeWith.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object. The key\n * will be excluded from the returned object if the resulting value is\n * `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !(_has(k, result))) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/mergeWithKey.js\n// module id = ../node_modules/ramda/src/mergeWithKey.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/min.js\n// module id = ../node_modules/ramda/src/min.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/minBy.js\n// module id = ../node_modules/ramda/src/minBy.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see `mathMod`.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/modulo.js\n// module id = ../node_modules/ramda/src/modulo.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/multiply.js\n// module id = ../node_modules/ramda/src/multiply.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0: return function() {return fn.call(this);};\n    case 1: return function(a0) {return fn.call(this, a0);};\n    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/nAry.js\n// module id = ../node_modules/ramda/src/nAry.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/negate.js\n// module id = ../node_modules/ramda/src/negate.js\n// module chunks = 0","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\nvar any = require('./any');\n\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/none.js\n// module id = ../node_modules/ramda/src/none.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/not.js\n// module id = ../node_modules/ramda/src/not.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/nth.js\n// module id = ../node_modules/ramda/src/nth.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar nth = require('./nth');\n\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function() {\n    return nth(n, arguments);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/nthArg.js\n// module id = ../node_modules/ramda/src/nthArg.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/objOf.js\n// module id = ../node_modules/ramda/src/objOf.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _of = require('./internal/_of');\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/of.js\n// module id = ../node_modules/ramda/src/of.js\n// module chunks = 0","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/omit.js\n// module id = ../node_modules/ramda/src/omit.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function() {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/once.js\n// module id = ../node_modules/ramda/src/once.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/or.js\n// module id = ../node_modules/ramda/src/or.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/over.js\n// module id = ../node_modules/ramda/src/over.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pair.js\n// module id = ../node_modules/ramda/src/pair.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nmodule.exports = _createPartialApplicator(_concat);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/partial.js\n// module id = ../node_modules/ramda/src/partial.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\nvar flip = require('./flip');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nmodule.exports = _createPartialApplicator(flip(_concat));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/partialRight.js\n// module id = ../node_modules/ramda/src/partialRight.js\n// module chunks = 0","var filter = require('./filter');\nvar juxt = require('./juxt');\nvar reject = require('./reject');\n\n\n/**\n * Takes a predicate and a list or other \"filterable\" object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nmodule.exports = juxt([filter, reject]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/partition.js\n// module id = ../node_modules/ramda/src/partition.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/path.js\n// module id = ../node_modules/ramda/src/path.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\nvar path = require('./path');\n\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * `R.equals` terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pathEq.js\n// module id = ../node_modules/ramda/src/pathEq.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar defaultTo = require('./defaultTo');\nvar path = require('./path');\n\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pathOr.js\n// module id = ../node_modules/ramda/src/pathOr.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar path = require('./path');\n\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pathSatisfies.js\n// module id = ../node_modules/ramda/src/pathSatisfies.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pick.js\n// module id = ../node_modules/ramda/src/pick.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pickAll.js\n// module id = ../node_modules/ramda/src/pickAll.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pickBy.js\n// module id = ../node_modules/ramda/src/pickBy.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pipe.js\n// module id = ../node_modules/ramda/src/pipe.js\n// module chunks = 0","var composeK = require('./composeK');\nvar reverse = require('./reverse');\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pipeK.js\n// module id = ../node_modules/ramda/src/pipeK.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _pipeP = require('./internal/_pipeP');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipeP, arguments[0], tail(arguments)));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pipeP.js\n// module id = ../node_modules/ramda/src/pipeP.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\nvar prop = require('./prop');\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig k -> [{k: v}] -> [v]\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} list The array to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/pluck.js\n// module id = ../node_modules/ramda/src/pluck.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/prepend.js\n// module id = ../node_modules/ramda/src/prepend.js\n// module chunks = 0","var multiply = require('./multiply');\nvar reduce = require('./reduce');\n\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nmodule.exports = reduce(multiply, 1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/product.js\n// module id = ../node_modules/ramda/src/product.js\n// module chunks = 0","var _map = require('./internal/_map');\nvar identity = require('./identity');\nvar pickAll = require('./pickAll');\nvar useWith = require('./useWith');\n\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/project.js\n// module id = ../node_modules/ramda/src/project.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/prop.js\n// module id = ../node_modules/ramda/src/prop.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the specified object property is equal, in `R.equals`\n * terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/propEq.js\n// module id = ../node_modules/ramda/src/propEq.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar is = require('./is');\n\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/propIs.js\n// module id = ../node_modules/ramda/src/propIs.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return (obj != null && _has(p, obj)) ? obj[p] : val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/propOr.js\n// module id = ../node_modules/ramda/src/propOr.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/propSatisfies.js\n// module id = ../node_modules/ramda/src/propSatisfies.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/props.js\n// module id = ../node_modules/ramda/src/props.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/range.js\n// module id = ../node_modules/ramda/src/range.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * `R.reduced` to shortcut the iteration.\n *\n * The arguments' order of `reduceRight`'s iterator function is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reduce.js\n// module id = ../node_modules/ramda/src/reduce.js\n// module chunks = 0","var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general `groupBy` function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reduceBy.js\n// module id = ../node_modules/ramda/src/reduceBy.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to `reduce`, except moves through the input list from the right to\n * the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reduceRight.js\n// module id = ../node_modules/ramda/src/reduceRight.js\n// module chunks = 0","var _curryN = require('./internal/_curryN');\nvar _reduce = require('./internal/_reduce');\nvar _reduced = require('./internal/_reduced');\n\n\n/**\n * Like `reduce`, `reduceWhile` returns a single item by iterating through\n * the list, successively calling the iterator function. `reduceWhile` also\n * takes a predicate that is evaluated before each step. If the predicate returns\n * `false`, it \"short-circuits\" the iteration and returns the current value\n * of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function(acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reduceWhile.js\n// module id = ../node_modules/ramda/src/reduceWhile.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _reduced = require('./internal/_reduced');\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by reduceRight.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *      R.reduce(\n *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n *        0,\n *        [1, 2, 3, 4, 5]) // 10\n */\n\nmodule.exports = _curry1(_reduced);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reduced.js\n// module id = ../node_modules/ramda/src/reduced.js\n// module chunks = 0","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of `filter`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reject.js\n// module id = ../node_modules/ramda/src/reject.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/remove.js\n// module id = ../node_modules/ramda/src/remove.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/repeat.js\n// module id = ../node_modules/ramda/src/repeat.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/replace.js\n// module id = ../node_modules/ramda/src/replace.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/reverse.js\n// module id = ../node_modules/ramda/src/reverse.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Scan is similar to reduce, but returns a list of successively reduced values\n * from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/scan.js\n// module id = ../node_modules/ramda/src/scan.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/sequence.js\n// module id = ../node_modules/ramda/src/sequence.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar always = require('./always');\nvar over = require('./over');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/set.js\n// module id = ../node_modules/ramda/src/set.js\n// module chunks = 0","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/slice.js\n// module id = ../node_modules/ramda/src/slice.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/sort.js\n// module id = ../node_modules/ramda/src/sort.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/sortBy.js\n// module id = ../node_modules/ramda/src/sortBy.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/sortWith.js\n// module id = ../node_modules/ramda/src/sortWith.js\n// module chunks = 0","var invoker = require('./invoker');\n\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nmodule.exports = invoker(1, 'split');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/split.js\n// module id = ../node_modules/ramda/src/split.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar length = require('./length');\nvar slice = require('./slice');\n\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/splitAt.js\n// module id = ../node_modules/ramda/src/splitAt.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar slice = require('./slice');\n\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/splitEvery.js\n// module id = ../node_modules/ramda/src/splitEvery.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/splitWhen.js\n// module id = ../node_modules/ramda/src/splitWhen.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/subtract.js\n// module id = ../node_modules/ramda/src/subtract.js\n// module chunks = 0","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/sum.js\n// module id = ../node_modules/ramda/src/sum.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar concat = require('./concat');\nvar difference = require('./difference');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/symmetricDifference.js\n// module id = ../node_modules/ramda/src/symmetricDifference.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar concat = require('./concat');\nvar differenceWith = require('./differenceWith');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/symmetricDifferenceWith.js\n// module id = ../node_modules/ramda/src/symmetricDifferenceWith.js\n// module chunks = 0","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/tail.js\n// module id = ../node_modules/ramda/src/tail.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtake = require('./internal/_xtake');\nvar slice = require('./slice');\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/take.js\n// module id = ../node_modules/ramda/src/take.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar drop = require('./drop');\n\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/takeLast.js\n// module id = ../node_modules/ramda/src/takeLast.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, idx + 1);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/takeLastWhile.js\n// module id = ../node_modules/ramda/src/takeLastWhile.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtakeWhile = require('./internal/_xtakeWhile');\n\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/takeWhile.js\n// module id = ../node_modules/ramda/src/takeWhile.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/tap.js\n// module id = ../node_modules/ramda/src/tap.js\n// module chunks = 0","var _cloneRegExp = require('./internal/_cloneRegExp');\nvar _curry2 = require('./internal/_curry2');\nvar _isRegExp = require('./internal/_isRegExp');\nvar toString = require('./toString');\n\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/test.js\n// module id = ../node_modules/ramda/src/test.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/times.js\n// module id = ../node_modules/ramda/src/times.js\n// module chunks = 0","var invoker = require('./invoker');\n\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nmodule.exports = invoker(0, 'toLowerCase');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/toLower.js\n// module id = ../node_modules/ramda/src/toLower.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/toPairs.js\n// module id = ../node_modules/ramda/src/toPairs.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/toPairsIn.js\n// module id = ../node_modules/ramda/src/toPairsIn.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _toString = require('./internal/_toString');\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/toString.js\n// module id = ../node_modules/ramda/src/toString.js\n// module chunks = 0","var invoker = require('./invoker');\n\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nmodule.exports = invoker(0, 'toUpperCase');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/toUpper.js\n// module id = ../node_modules/ramda/src/toUpper.js\n// module chunks = 0","var _reduce = require('./internal/_reduce');\nvar _xwrap = require('./internal/_xwrap');\nvar curryN = require('./curryN');\n\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the `R.reduced` function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is R.identity. The init\n * function can be used to provide an initial accumulator, but is ignored by\n * transduce.\n *\n * The iteration is performed with R.reduce after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n */\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/transduce.js\n// module id = ../node_modules/ramda/src/transduce.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n * If some of the rows are shorter than the following rows, their elements are skipped:\n *\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/transpose.js\n// module id = ../node_modules/ramda/src/transpose.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar map = require('./map');\nvar sequence = require('./sequence');\n\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return sequence(of, map(f, traversable));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/traverse.js\n// module id = ../node_modules/ramda/src/traverse.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/trim.js\n// module id = ../node_modules/ramda/src/trim.js\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/tryCatch.js\n// module id = ../node_modules/ramda/src/tryCatch.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/type.js\n// module id = ../node_modules/ramda/src/type.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, R.unapply derives a variadic function from a function which\n * takes an array. R.unapply is the inverse of R.apply.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nmodule.exports = _curry1(function unapply(fn) {\n  return function() {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unapply.js\n// module id = ../node_modules/ramda/src/unapply.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unary.js\n// module id = ../node_modules/ramda/src/unary.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function() {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/uncurryN.js\n// module id = ../node_modules/ramda/src/uncurryN.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unfold.js\n// module id = ../node_modules/ramda/src/unfold.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar compose = require('./compose');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(compose(uniq, _concat));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/union.js\n// module id = ../node_modules/ramda/src/union.js\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unionWith.js\n// module id = ../node_modules/ramda/src/unionWith.js\n// module chunks = 0","var identity = require('./identity');\nvar uniqBy = require('./uniqBy');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. `R.equals` is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nmodule.exports = uniqBy(identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/uniq.js\n// module id = ../node_modules/ramda/src/uniq.js\n// module chunks = 0","var _Set = require('./internal/_Set');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. `R.equals` is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/uniqBy.js\n// module id = ../node_modules/ramda/src/uniqBy.js\n// module chunks = 0","var _containsWith = require('./internal/_containsWith');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/uniqWith.js\n// module id = ../node_modules/ramda/src/uniqWith.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      // coerceArray :: (a|[a]) -> [a]\n *      var coerceArray = R.unless(R.isArrayLike, R.of);\n *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n *      coerceArray(1);         //=> [1]\n */\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unless.js\n// module id = ../node_modules/ramda/src/unless.js\n// module chunks = 0","var _identity = require('./internal/_identity');\nvar chain = require('./chain');\n\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nmodule.exports = chain(_identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/unnest.js\n// module id = ../node_modules/ramda/src/unnest.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/until.js\n// module id = ../node_modules/ramda/src/until.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar adjust = require('./adjust');\nvar always = require('./always');\n\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/update.js\n// module id = ../node_modules/ramda/src/update.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function() {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/useWith.js\n// module id = ../node_modules/ramda/src/useWith.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/values.js\n// module id = ../node_modules/ramda/src/values.js\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/valuesIn.js\n// module id = ../node_modules/ramda/src/valuesIn.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nmodule.exports = (function() {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function(x) {\n    return {value: x, map: function() { return this; }};\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/view.js\n// module id = ../node_modules/ramda/src/view.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/when.js\n// module id = ../node_modules/ramda/src/when.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as `filter` and `find`.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(__, 10),\n *        y: R.lt(__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/where.js\n// module id = ../node_modules/ramda/src/where.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar map = require('./map');\nvar where = require('./where');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in `R.equals` terms) as accessing that property of the spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/whereEq.js\n// module id = ../node_modules/ramda/src/whereEq.js\n// module chunks = 0","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar flip = require('./flip');\nvar reject = require('./reject');\n\n\n/**\n * Returns a new list without values in the first argument.\n * `R.equals` is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nmodule.exports = _curry2(function(xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/without.js\n// module id = ../node_modules/ramda/src/without.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/xprod.js\n// module id = ../node_modules/ramda/src/xprod.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/zip.js\n// module id = ../node_modules/ramda/src/zip.js\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/zipObj.js\n// module id = ../node_modules/ramda/src/zipObj.js\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ramda/src/zipWith.js\n// module id = ../node_modules/ramda/src/zipWith.js\n// module chunks = 0","import shuffle from './shuffle';\nimport {dragOver, dropPiece, pickImage} from './drag-and-drop';\nimport styles from '../styles/app.scss'\n\n//DOM caching\nconst hexagons = Array.from(document.querySelectorAll('.c-puzzle__hexagon'));\nconst piecesContainer = document.querySelector('.c-pieces');\nconst pieces = Array.from(document.querySelectorAll('.c-pieces__piece'));\nconst start = document.getElementById('start');\nconst hint = document.getElementById('hint');\nconst reset = document.getElementById('reset');\nconst hardMode = document.getElementById('hard-mode');\nconst timer = document.getElementById('timer');\nconst solved = document.getElementById('solved');\nconst unsolved = document.getElementById('unsolved');\nconst startSound = document.getElementById('start-audio');\nconst failSound = document.getElementById('fail-audio');\nconst winSound = document.getElementById('win-audio');\nconst resetSound = document.getElementById('reset-audio');\n\nlet remainingTime = 300;\nlet timerIntervalID;\n\nconst updateTimer = time => {\n  time > 60 ? timer.classList.remove('alert') : timer.classList.add('alert');\n  timer.innerHTML = `${~~(time / 60)}:${time % 60 < 10 ? '0' : ''}${time % 60}`;\n};\n\nconst resetGame = () => {\n  unsolved.classList.remove('show');\n  piecesContainer.classList.remove('show');\n  hexagons.forEach(hexagon => hexagon.classList.remove('finished'));\n  pieces.forEach(piece => piecesContainer.appendChild(piece));\n  remainingTime = hardMode.checked ? 180 : 300;\n  start.disabled = false;\n  hint.disabled = true;\n  reset.disabled = true;\n  hardMode.disabled = false;\n  solved.classList.add('show');\n  clearInterval(timerIntervalID);\n  updateTimer(remainingTime);\n};\n\nconst failed = () => {\n  failSound.play();\n  resetGame();\n};\n\nconst resetButton = () => {\n  resetSound.play();\n  resetGame();\n};\n\nconst win = () => {\n  winSound.play();\n  hexagons.forEach(hexagon => hexagon.classList.add('finished'));\n  clearInterval(timerIntervalID);\n};\n\nconst timerInterval = () => remainingTime > 0 ? updateTimer(--remainingTime) : failed();\n\n\nconst checkResolved = () => {\n  const resolved = hexagons.every(hexagon => {\n    return hexagon.firstElementChild && (hexagon.firstElementChild.getAttribute('data-piece') === hexagon.getAttribute('data-piece'))\n  });\n  if (resolved) {\n    win();\n  }\n};\n\nconst dropAndCheck = (event) => {\n  dropPiece(event);\n  checkResolved();\n};\n\nconst solve = () => {\n  hexagons.forEach(hexagon => {\n    hexagon.appendChild(document.getElementById('piece'.concat(hexagon.getAttribute('data-piece'))))\n  });\n  checkResolved();\n};\n\n\nconst showHint = () => solved.classList.add('show');\nconst hideHint = () => solved.classList.remove('show');\n\nconst startGame = (event) => {\n  startSound.play();\n  shuffle(piecesContainer);\n  start.disabled = true;\n  if (!hardMode.checked) {\n    hint.disabled = false;\n  }\n  reset.disabled = false;\n  hardMode.disabled = true;\n  piecesContainer.classList.add('show');\n  solved.classList.remove('show');\n  unsolved.classList.add('show');\n  timerIntervalID = setInterval(timerInterval, 1000);\n};\n\nconst toggleHardMode = (event) => {\n  remainingTime = event.target.checked ? 180 : 300;\n  updateTimer(remainingTime);\n};\n\nhexagons.forEach((hexagon) => {\n  hexagon.addEventListener('drop', dropAndCheck);\n  hexagon.addEventListener('dragover', dragOver);\n  hexagon.addEventListener('dragstart', pickImage);\n});\n\npiecesContainer.addEventListener('drop', dropPiece);\npiecesContainer.addEventListener('dragover', dragOver);\n\npieces.forEach((piece) => piece.addEventListener('dragstart', pickImage));\n\nstart.addEventListener('click', startGame);\nreset.addEventListener('click', resetButton);\nhint.addEventListener('mousedown', showHint);\nhint.addEventListener('mouseup', hideHint);\nhardMode.addEventListener('change', toggleHardMode);\n\n// https://webpack.github.io/docs/hot-module-replacement.html\nif (module.hot) {\n  module.hot.accept();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/app.js","export const dragOver = (event) => {\n  event.preventDefault();\n  event.dataTransfer.dropEffect = \"copy\";\n};\n\nexport const dropPiece = (event) => {\n  event.preventDefault();\n  const destination = event.currentTarget;\n  const dataEmpty = destination.getAttribute('data-empty');\n\n  if (dataEmpty) {\n    destination.appendChild(document.getElementById(event.dataTransfer.getData(\"text/plain\")));\n    if (dataEmpty === 'true') {\n      destination.setAttribute('data-empty', '');\n    }\n    const origin = event.dataTransfer.getData(\"origin\");\n    if (origin) {\n      document.getElementById(origin).setAttribute('data-empty', 'true');\n    }\n  }\n};\n\nexport const pickImage = (event) => {\n  event.dataTransfer.setData(\"text/plain\", event.target.id);\n  event.dataTransfer.dropEffect = \"copy\";\n  if (event.target.parentNode.classList.contains('c-puzzle__hexagon')) {\n    event.dataTransfer.setData(\"origin\", event.target.parentNode.id);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/drag-and-drop.js","import R from 'ramda';\n\nconst compose = R.compose;\n\nconst getChildren = (pieceContainer) => pieceContainer.children;\n\nconst shuffleArray = (array) => [...array].sort((a, b) => 0.5 - Math.random());\n\nconst relocateInDOM = (piece) => piece.parentNode.insertBefore(piece, null);\n\nconst shufflePieces = compose(R.forEach(relocateInDOM), shuffleArray, Array.from, getChildren);\n\nexport default shufflePieces;\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/shuffle.js"],"sourceRoot":""}